"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[1618],{5640:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Tutorials/Import/seeding","title":"Importing Keys from Bip32 Seed with Cloud HSM","description":"Learn how to import keys from a BIP32 seed using Cloud Hardware Security Modules (HSM), with BTC address generation and signing capabilities.","source":"@site/tsb/Tutorials/Import/seeding.md","sourceDirName":"Tutorials/Import","slug":"/Tutorials/Import/seeding","permalink":"/tsb/Tutorials/Import/seeding","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":0,"frontMatter":{"sidebar_position":0,"title":"Importing Keys from Bip32 Seed with Cloud HSM","sidebar_label":"Import from Bip32 Seed","description":"Learn how to import keys from a BIP32 seed using Cloud Hardware Security Modules (HSM), with BTC address generation and signing capabilities.","keywords":["cybersecurity","data security","key management","cloud hsm","hsm key management","hsm cloud","hsm as a service","cloud based hsm","hsm digital signature","hsm services","hsm service","hsm","hardware security module","BIP32 seed","BTC address generation","key import","HSM key import","ECC cryptography","elliptic curve cryptography","key attributes","HSM policies"]},"sidebar":"tutorialSidebar","previous":{"title":"File Encryption (ECIES)","permalink":"/tsb/Tutorials/Encryption/FileEncryption"},"next":{"title":"Import Locally Generated Keys","permalink":"/tsb/Tutorials/Import/importKey"}}');var n=s(74848),i=s(28453);const o={sidebar_position:0,title:"Importing Keys from Bip32 Seed with Cloud HSM",sidebar_label:"Import from Bip32 Seed",description:"Learn how to import keys from a BIP32 seed using Cloud Hardware Security Modules (HSM), with BTC address generation and signing capabilities.",keywords:["cybersecurity","data security","key management","cloud hsm","hsm key management","hsm cloud","hsm as a service","cloud based hsm","hsm digital signature","hsm services","hsm service","hsm","hardware security module","BIP32 seed","BTC address generation","key import","HSM key import","ECC cryptography","elliptic curve cryptography","key attributes","HSM policies"]},a="Import from Bip32 Seed",d={},l=[];function c(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"import-from-bip32-seed",children:"Import from Bip32 Seed"})}),"\n",(0,n.jsx)(r.p,{children:"The example below shows how to use the Rest-API endpoint to import a key from a BIP32 seed, with BTC address generation and signing capabilities."}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"TSB_ENGINE"})," and ",(0,n.jsx)(r.code,{children:"KEY_AUTH"})," license is required to create SKA-Keys and generate BTC-Addresses."]}),"\n",(0,n.jsx)(r.admonition,{title:"note",type:"note",children:(0,n.jsxs)(r.p,{children:["If you do not have a SmartKeyAttributes subscription, you must remove the ",(0,n.jsx)(r.code,{children:"policy"})," and the ",(0,n.jsx)(r.code,{children:"addressFormat"})," from the request below. Be careful, you    have to generate the Wallet-Address by yourself!"]})}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"POST"}),": ",(0,n.jsx)(r.a,{href:"https://primusdev.cloudshsm.com/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config#/Keys/importKey",children:"/v1/importedKey"})]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Description"}),": Import key from a BIP32 seed."]}),"\n",(0,n.jsxs)(r.p,{children:["Replace ",(0,n.jsx)(r.code,{children:"<keyname>"})," and ",(0,n.jsx)(r.code,{children:"seed"})," with your own values. Note, the seed chosen here is an example 32 byte array."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'{\n    "label": "<keyname>",\n    "addressFormat": {\n        "format": "BTC"\n    },\n    "curveOid": "1.3.132.0.10",\n    "seed": "AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8=",\n    "attributes": {\n        "encrypt": false,\n        "decrypt": false,\n        "verify": true,\n        "sign": true,\n        "wrap": false,\n        "unwrap": false,\n        "derive": true,\n        "bip32": true,\n        "extractable": false,\n        "modifiable": true,\n        "destroyable": true,\n        "sensitive": true,\n        "copyable": false\n    },\n    "policy": {\n        "ruleUse": null,\n        "ruleBlock": null,\n        "ruleUnblock": null,\n        "ruleModify": null,\n        "keyStatus": {\n            "blocked": false\n        }\n    }\n}\n'})})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>a});var t=s(96540);const n={},i=t.createContext(n);function o(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);