"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[56761],{5253:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Tutorials/Migrating-MPKI-to-HSM/Test&Cleanup","title":"Testing Microsoft AD CS after a key migration","description":"Reconfiguring Microsoft AD CS Registry for Securosys Hardware Security Modules (HSMs)","source":"@site/ms-pki-adcs/Tutorials/Migrating-MPKI-to-HSM/Test&Cleanup.md","sourceDirName":"Tutorials/Migrating-MPKI-to-HSM","slug":"/Tutorials/Migrating-MPKI-to-HSM/Test&Cleanup","permalink":"/ms-pki-adcs/Tutorials/Migrating-MPKI-to-HSM/Test&Cleanup","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Testing Microsoft AD CS after a key migration","sidebar_label":"Testing","description":"Reconfiguring Microsoft AD CS Registry for Securosys Hardware Security Modules (HSMs)","keywords":["hsm","cloud hsm"]},"sidebar":"tutorialSidebar","previous":{"title":"Reconfigure registry","permalink":"/ms-pki-adcs/Tutorials/Migrating-MPKI-to-HSM/Reconfigure-ADCS-Registry"},"next":{"title":"Migrating to a new instance","permalink":"/ms-pki-adcs/category/migrating-to-a-new-instance"}}');var i=r(74848),s=r(28453);const o={sidebar_position:5,title:"Testing Microsoft AD CS after a key migration",sidebar_label:"Testing",description:"Reconfiguring Microsoft AD CS Registry for Securosys Hardware Security Modules (HSMs)",keywords:["hsm","cloud hsm"]},a="Testing and Cleanup",c={},l=[];function u(e){const t={admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"testing-and-cleanup",children:"Testing and Cleanup"})}),"\n",(0,i.jsx)(t.p,{children:"Start the Microsoft AD CS services again and verify that everything works correctly."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Start the AD CS service again:"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"net start certsvc\n\nThe Active Directory Certificate Services service is starting.\nThe Active Directory Certificate Services service was started successfully.\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Run the following command on AD CS to verify that the CA service is up and ready to receive requests:"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'certutil -ping\n\nConnecting to WIN-E99A37QE5JP\\myDemoCA ...\nServer "myDemoCA" ICertRequest2 interface is alive (32ms)\nCertUtil: -ping command completed successfully.\n'})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Run the command ",(0,i.jsx)(t.code,{children:"certutil -store my <Your CA Common Name>"})," on the CA to verify that the CA is configured for the correct key and provider:"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'certutil -store my myDemoCA\n\nmy "Personal"\n================ Certificate 43 ================\nSerial Number: 3aa837d2cf1289b241b9ee87a5474b4f\nIssuer: CN=myDemoCA\n NotBefore: 10.08.2021 14:14\n NotAfter: 10.08.2026 14:22\nSubject: CN=myDemoCA\nCA Version: V0.0\nSignature matches Public Key\nRoot Certificate: Subject matches Issuer\nCert Hash(sha1): 19f647a3f4e60eabc126d73ef1ef6e9f84224997\n  Key Container = myDemoCA\n  Provider = Securosys Primus HSM Key Storage Provider\nSignature test passed\nCertUtil: -store command completed successfully.\n'})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Request and issue a certificate for a user or computer and inspect the resulting certificate details to ver-ify that the certificate shows the correct signature algorithm and signature hash algorithm."}),"\n",(0,i.jsx)(t.li,{children:"Verify that the certificate revocation list can be published and has the correct signature algorithm and signature hash algorithm. Publish the certificate revocation list (CRL) and check the correct signature algorithm by running the following commands on the CA. Please replace <Your CA Common Name> with your CA Common Name."}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"certutil \u2013crl\n\nCertUtil: -CRL command completed successfully.\n\ncertutil C:\\Windows\\System32\\CertSrv\\CertEnroll\\myDemoCA.crl\n"})}),"\n",(0,i.jsx)(t.p,{children:"If everything works correctly, the migration is completed. Cleanup all temporary files created during these migration steps (backup, export, registry files)."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Ensure that you have removed (wiped) all the PKCS#12 backup or export files containing the CA key!"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var n=r(96540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);