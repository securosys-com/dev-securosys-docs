"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[38053],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var t=i(96540);const r={},s=t.createContext(r);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:n},e.children)}},51470:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Installation/certificate","title":"Configuration","description":"Preparing certificates to install in Microsoft HGS with Securosys Hardware Security Modules (HSMs)","source":"@site/ms-hgs/Installation/certificate.md","sourceDirName":"Installation","slug":"/Installation/certificate","permalink":"/ms-hgs/Installation/certificate","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Configuration","sidebar_label":"4. Certificates","description":"Preparing certificates to install in Microsoft HGS with Securosys Hardware Security Modules (HSMs)","keywords":["hsm","cloud hsm"]},"sidebar":"tutorialSidebar","previous":{"title":"2. Installing the API provider","permalink":"/ms-hgs/Installation/Provider"},"next":{"title":"5. HGS Configuration","permalink":"/ms-hgs/Installation/configuration"}}');var r=i(74848),s=i(28453);const c={sidebar_position:3,title:"Configuration",sidebar_label:"4. Certificates",description:"Preparing certificates to install in Microsoft HGS with Securosys Hardware Security Modules (HSMs)",keywords:["hsm","cloud hsm"]},o="Preparing Certificates",a={},l=[{value:"Initializing HGS Server",id:"initializing-hgs-server",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"preparing-certificates",children:"Preparing Certificates"})}),"\n",(0,r.jsx)(n.p,{children:"The Microsoft HGS requires certificates for signing and encryption as well as HGS associated keys to operate."}),"\n",(0,r.jsx)(n.p,{children:"Keys are used for \u201cattestation\u201d, one of the two services that run as part of HGS, to affirm the health of the Guarded Hosts and the associated Hyper-V virtual machines."}),"\n",(0,r.jsxs)(n.p,{children:["Other keys called ",(0,r.jsx)(n.strong,{children:"Transport Keys"})," (TKs) are used for ",(0,r.jsx)(n.strong,{children:"Key Protection Service"})," (KPS), to unlock and run the ",(0,r.jsx)(n.strong,{children:"Shielded VMs"})," on positively attested Guarded Hosts."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Create and configure the ",(0,r.jsx)(n.code,{children:"request.inf"})," file are as follows:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'[Version]\nSignature="$Windows NT$"\n[NewRequest]\n// highlight-next-line\nSubject = "CN=HGSSigning.relecloud.com"\nHashAlgorithm = SHA256\nKeyAlgorithm = RSA\nKeyLength = 2048\nExportable = FALSE\nMachineKeySet = True\nKeySpec = 0\nProviderName = "Securosys Primus HSM Key Storage Provider"\nProviderType = 0\nKeyUsage = 0xA0\nRequestType = PKCS10\n[EnhancedKeyUsageExtension]\nOID=1.3.6.1.5.5.7.3.1\nOID=1.3.6.1.5.5.7.3.2\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Open the command prompt and run the following commands to create the certificate request for signing and\nencryption certificates."}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a CSR for signing:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"certreq -new request.inf signreq.txt\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Replace the ",(0,r.jsx)(n.code,{children:"CN=HGSSigning.relecloud.com"})," to ",(0,r.jsx)(n.code,{children:"CN=HGSEncryption.relecloud.com"})," within the ",(0,r.jsx)(n.code,{children:"request.inf"})," file before generating the certificate request for Encryption certificate."]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a CSR for encryption:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"certreq -new request.inf encrreq.txt\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Send the created certificate requests to a public CA to sign or use a self-signed CA to sign the certificates. To sign the CSRs with a self-signed CA with Securosys Primus HSMs see our guide on ",(0,r.jsx)(n.a,{href:"/ms-pki-adcs/overview",children:"Microsoft PKI"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"initializing-hgs-server",children:"Initializing HGS Server"}),"\n",(0,r.jsxs)(n.p,{children:["Launch an elevated Windows PowerShell console on your environment's HGS Server (in our example ",(0,r.jsx)(n.strong,{children:"HOST_GS_AD"}),"), and execute the following commands to configure the HGS server using the generated encryption and signing certificates."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Add the thumbprints of the certificates previously created to the HGS:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"$Certs = Get-ChildItem Cert:\\LocalMachine\\My\\ -dnsname HGS*\n$Certs\n$Signing = $Certs[0].Thumbprint\n$Encryption = $Certs[1].Thumbprint\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["Initialize the server with the following command, replace ",(0,r.jsx)(n.code,{children:"TestHGS"})," with your name of HGS Service."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Initialize-HgsServer -HgsServiceName TestHGS -SigningCertificateThumbprint $Signing -EncryptionCertificateThumbprint $Encryption -TrustActiveDirectory -Http -HttpPort 80\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Run the Local Machine Certificate Management Console ",(0,r.jsx)(n.code,{children:"certlm.msc"})," and locate the encryption and\nsigning certificates under the ",(0,r.jsx)(n.strong,{children:"Personal folder"}),", right click each of them in turn and verify, if required also add permission to the service account (e.g. HGSSVC_276CF$) to the list of Groups and Users permitted to manage the private keys."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Allow ",(0,r.jsx)(n.strong,{children:"Read"})," is the only required permission."]}),"\n",(0,r.jsxs)(n.p,{children:["To confirm KPS has access to the private keys of your encryption and signing certificates, run the\nHGS diagnostics using ",(0,r.jsx)(n.code,{children:"Get-HgsTrace"})," command. If any tests fail, be sure to remedy the identified problem(s)\nbefore continuing to configure any additional nodes."]}),"\n",(0,r.jsx)(n.p,{children:"Run the following command in PowerShell:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Get-HgsTrace -RunDiagnostics\n"})}),"\n",(0,r.jsx)(n.p,{children:"Follow the next steps to add the certificates to the GMSA users and initalize the KPS."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Open the command prompt and type ",(0,r.jsx)(n.code,{children:"certlm.msc"}),", press Enter."]}),"\n",(0,r.jsxs)(n.li,{children:["Expand ",(0,r.jsx)(n.code,{children:"Certificates - Local Computer"}),", select ",(0,r.jsx)(n.code,{children:"Personal"})," -> ",(0,r.jsx)(n.code,{children:"Certificates"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Right click on the signing certificate. Select ",(0,r.jsx)(n.code,{children:"All Tasks"})," -> ",(0,r.jsx)(n.code,{children:"Manage Private Keys..."})]}),"\n",(0,r.jsxs)(n.li,{children:["Select ",(0,r.jsx)(n.code,{children:"Add"})," -> ",(0,r.jsx)(n.code,{children:"Object Types..."})," and select ",(0,r.jsx)(n.code,{children:"Service Accounts"}),". Complete by selecting ",(0,r.jsx)(n.code,{children:"OK"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Type ",(0,r.jsx)(n.strong,{children:"HGSSVC"})," in the object name and select Check Names. It will display the GMSA user name. Select ",(0,r.jsx)(n.code,{children:"OK"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Select GMSA user in ",(0,r.jsx)(n.strong,{children:"Group"})," or ",(0,r.jsx)(n.strong,{children:"User Names"})," and select Read check box after that select ",(0,r.jsx)(n.code,{children:"OK"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Repeat the same steps for the ",(0,r.jsx)(n.code,{children:"Encryption certificate"})," to provide the Read permission to GMSA user."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Open an Internet Browser and access the metadata. If the metadata is accessible then you have\nsuccessfully initialized the Key Protection service using certificates backed by the HSM."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);