"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[49715],{20270:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"osslv3/Use-Cases/self_signed_certificate","title":"OpenSSL - Self-Signed Root CA Certificate","description":"Discover OpenSSL\'s PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.","source":"@site/openssl/osslv3/Use-Cases/self_signed_certificate.md","sourceDirName":"osslv3/Use-Cases","slug":"/osslv3/Use-Cases/self_signed_certificate","permalink":"/openssl/osslv3/Use-Cases/self_signed_certificate","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"OpenSSL","permalink":"/openssl/tags/open-ssl"},{"inline":true,"label":"PKCS#11","permalink":"/openssl/tags/pkcs-11"}],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"OpenSSL - Self-Signed Root CA Certificate","sidebar_label":"Self-Signed Root Certificate","description":"Discover OpenSSL\'s PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.","keywords":["OpenSSL PKCS11 provider","OpenSSL PKCS11 API","OpenSSL command line utility (CLI)","OpenSSL CLI commands","OpenSSL installation guide","OpenSSL installation troubleshooting","OpenSSL troubleshooting tips","OpenSSL certificate management","OpenSSL certificate creation","OpenSSL certificate renewal","OpenSSL configuration file","OpenSSL configuration options","OpenSSL configuration guide","OpenSSL encryption algorithms","OpenSSL decryption methods","OpenSSL digital signatures","OpenSSL SSL/TLS protocols","OpenSSL SSL/TLS configuration","OpenSSL heartbleed vulnerability","OpenSSL security updates"],"tags":["OpenSSL","PKCS#11"]},"sidebar":"openssl","previous":{"title":"NGINX","permalink":"/openssl/osslv3/Use-Cases/nginx"},"next":{"title":"Installation","permalink":"/openssl/category/installation"}}');var s=t(74848),r=t(28453);const o={sidebar_position:1,title:"OpenSSL - Self-Signed Root CA Certificate",sidebar_label:"Self-Signed Root Certificate",description:"Discover OpenSSL's PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.",keywords:["OpenSSL PKCS11 provider","OpenSSL PKCS11 API","OpenSSL command line utility (CLI)","OpenSSL CLI commands","OpenSSL installation guide","OpenSSL installation troubleshooting","OpenSSL troubleshooting tips","OpenSSL certificate management","OpenSSL certificate creation","OpenSSL certificate renewal","OpenSSL configuration file","OpenSSL configuration options","OpenSSL configuration guide","OpenSSL encryption algorithms","OpenSSL decryption methods","OpenSSL digital signatures","OpenSSL SSL/TLS protocols","OpenSSL SSL/TLS configuration","OpenSSL heartbleed vulnerability","OpenSSL security updates"],tags:["OpenSSL","PKCS#11"]},a="Creating a Self-Signed Root CA Certificate with OpenSSL",c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Preparation",id:"preparation",level:2},{value:"Root CA certificate",id:"root-ca-certificate",level:2},{value:"Intermediate CA certificate",id:"intermediate-ca-certificate",level:2},{value:"Server certificate",id:"server-certificate",level:2},{value:"More resources",id:"more-resources",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"creating-a-self-signed-root-ca-certificate-with-openssl",children:"Creating a Self-Signed Root CA Certificate with OpenSSL"})}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(n.p,{children:"The following example shows how to use OpenSSL to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"create a Self-Signed Root Certificate for a Root Certificate Authority (CA)"}),"\n",(0,s.jsx)(n.li,{children:"Use the root certificate to create a certificate for an intermediate CA"}),"\n",(0,s.jsx)(n.li,{children:"issue a server certificate."}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"danger",children:[(0,s.jsx)(n.p,{children:'The OpenSSL commands and configurations are examples to demonstrate\nthe possibility of using OpenSSL in combination with a Securosys HSM\nfor PKI applications. Some of the tools are not considered to have\n"production quality" by OpenSSL itself:'}),(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["This command was originally meant as an example of how to do things\nin a CA. Its code does not have production quality. It was not\nsupposed to be used as a full blown CA itself\n-- ",(0,s.jsx)(n.a,{href:"https://www.openssl.org/docs/man3.2/man1/openssl-ca.html#WARNINGS",children:"openssl-ca man page"})]}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"preparation",children:"Preparation"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create the directories and initial files"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir -p myCA/{rootCA,intermediateCA}/{certs,crl,newcerts,private,csr}\n\ntouch myCA/rootCA/index.txt\necho 1000 > myCA/rootCA/serial\necho 1000 > myCA/rootCA/crlnumber\n\ntouch myCA/intermediateCA/index.txt\necho 1000 > myCA/intermediateCA/serial\necho 1000 > myCA/intermediateCA/crlnumber\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Download the configuration for the root CA\n",(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(36499).A+"",children:"openssl_root.cnf"}),",\nand the intermediate CA\n",(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(59460).A+"",children:"openssl_intermediate.cnf"}),". These\ntwo configurations specify constraints, policies and extensions\nthat are applied to the certificates they create and sign."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"root-ca-certificate",children:"Root CA certificate"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a key."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl genpkey -propquery "provider=pkcs11" \\\n    -algorithm rsa -pkeyopt rsa_keygen_bits:4096 \\\n    -pkeyopt pkcs11_uri:"pkcs11:object=MyRootCA"\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["If your pkcs11-provider is configured to access to multiple\npartitions on the HSM the pkcs11-uris used in these examples are\nambiguous. Additionally specify the partition by adding the ",(0,s.jsx)(n.code,{children:"token"}),"\nattribute to the URI. E.g.: Use\n",(0,s.jsx)(n.code,{children:"pkcs11:object=MyRootCA;token=<USER_PARTITION_NAME>"})," instead of\n",(0,s.jsx)(n.code,{children:"pkcs11:object=MyRootCA"}),"."]})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:['Create a self-signed certificate. The v3_ca extensions defined in\nthe openssl_root.cnf configuration are applied which enable the\n"CA',":true",'" property.']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl req -config openssl_root.cnf \\\n    -key "pkcs11:object=MyRootCA" \\\n    -new -x509 -days 7300 -sha256 -extensions v3_ca \\\n    -out myCA/rootCA/certs/ca.cert.pem \\\n    -subj "/C=CH/ST=Zurich/L=Zurich/O=My Example Organisation/OU=IT Department/CN=Root CA"\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"intermediate-ca-certificate",children:"Intermediate CA certificate"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a key."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl genpkey -propquery "provider=pkcs11" \\\n    -algorithm rsa -pkeyopt rsa_keygen_bits:4096 \\\n    -pkeyopt pkcs11_uri:"pkcs11:object=MyIntermediateCA"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a certificate signing request (CSR)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl req -config openssl_intermediate.cnf \\\n    -key "pkcs11:object=MyIntermediateCA" \\\n    -new -sha256 \\\n    -out myCA/intermediateCA/certs/intermediate.csr.pem \\\n    -subj "/C=CH/ST=Zurich/L=Zurich/O=My Example Organisation/OU=IT Department/CN=Intermediate CA"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"As root CA, sign the CSR for the intermediate CA with the root\nCA key.The v3_intermediate_ca extensions defined in the\nopenssl_root.cnf configuration are applied."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl ca -batch -config openssl_root.cnf \\\n    -keyfile "pkcs11:object=MyRootCA" \\\n    -extensions v3_intermediate_ca -days 750 -notext -md sha256 \\\n    -in myCA/intermediateCA/certs/intermediate.csr.pem \\\n    -out myCA/intermediateCA/certs/intermediate.cert.pem\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Verify the signature on the intermediate certificate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl verify -CAfile myCA/rootCA/certs/ca.cert.pem \\\n    myCA/intermediateCA/certs/intermediate.cert.pem\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"server-certificate",children:"Server certificate"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a key."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl genpkey -propquery "provider=pkcs11" \\\n    -algorithm rsa -pkeyopt rsa_keygen_bits:4096 \\\n    -pkeyopt pkcs11_uri:"pkcs11:object=server-www.example.com"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a certificate signing request (CSR)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl req -copy_extensions=copyall \\\n    -key "pkcs11:object=server-www.example.com" \\\n    -new -sha256 \\\n    -out server-www.example.com.csr.pem \\\n    -subj "/C=CH/ST=Bern/L=Bern/O=My Example Organisation/OU=IT Department/CN=www.example.com" \\\n    -addext "subjectAltName = DNS:www.example.com, DNS:*.www.example.com"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"As intermediate CA, sign the server CSR with the intermediate CA key."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'openssl ca -batch -config openssl_intermediate.cnf \\\n    -extensions v3_server_cert \\\n    -keyfile "pkcs11:object=MyIntermediateCA" \\\n    -days 40 -notext -md sha256 \\\n    -in server-www.example.com.csr.pem \\\n    -out server-www.example.com.cert.pem\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Verify the certificate by checking the signatures using OpenSSL."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat myCA/intermediateCA/certs/intermediate.cert.pem \\\n    myCA/rootCA/certs/ca.cert.pem \\\n    > chain.pem\n\nopenssl verify -show_chain \\\n    -trusted myCA/rootCA/certs/ca.cert.pem \\\n    --untrusted chain.pem \\\n    server-www.example.com.cert.pem\n"})}),"\n",(0,s.jsx)(n.p,{children:"Additionally test the certificate by starting a https server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openssl s_server \\\n    -cert server-www.example.com.cert.pem \\\n    -key 'pkcs11:object=server-www.example.com' \\\n    -chainCAfile chain.pem -naccept +1\n"})}),"\n",(0,s.jsx)(n.p,{children:"and connecting to it"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -v --cacert myCA/rootCA/certs/ca.cert.pem \\\n    --connect-to www.example.com:443:localhost:4433 \\\n    https://www.example.com\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"more-resources",children:"More resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/openssl/osslv3/Tutorial/openssl_cli",children:"Generate a key with OpenSSL"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../Tutorial/troubleshooting",children:"Troubleshooting"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://docs.openssl.org/master/",children:"OpenSSL documentation"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},36499:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/files/openssl_root-d562bd505a4ae334dfa0664b2b13676b.cnf"},59460:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/files/openssl_intermediate-a244856f0122c19165cd5ed89017588b.cnf"}}]);