"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[66884],{28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var i=r(96540);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},98891:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Use-Cases/key-migration","title":"Key Migration and Primus Tools","description":"Key Migration with Securosys Primus Tools and Hardware Security Modules (HSMs)","source":"@site/primus-tools/Use-Cases/key-migration.md","sourceDirName":"Use-Cases","slug":"/Use-Cases/key-migration","permalink":"/primus-tools/Use-Cases/key-migration","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Key Migration and Primus Tools","sidebar_label":"Key Migration","description":"Key Migration with Securosys Primus Tools and Hardware Security Modules (HSMs)","keywords":["hsm","cloud hsm"]},"sidebar":"tutorialSidebar","previous":{"title":"Self-Signed Certificate","permalink":"/primus-tools/Use-Cases/certificate-sign-request"},"next":{"title":"Download","permalink":"/primus-tools/downloads"}}');var s=r(74848),t=r(28453);const a={sidebar_position:8,title:"Key Migration and Primus Tools",sidebar_label:"Key Migration",description:"Key Migration with Securosys Primus Tools and Hardware Security Modules (HSMs)",keywords:["hsm","cloud hsm"]},o="Key Migration",c={},l=[{value:"Migration - Symmetric Key",id:"migration---symmetric-key",level:2},{value:"Migration - Asymmetric Key",id:"migration---asymmetric-key",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"key-migration",children:"Key Migration"})}),"\n",(0,s.jsx)(n.p,{children:"Key migration refers to the process of securely transferring cryptographic keys with the wrapping mechanism from one HSM to another (same or different vendor) or a safe key injection into an IOT device. The process is generally used when cloning itself is not either available or viable (only a single or small amount of keys need to be migrated)."}),"\n",(0,s.jsx)(n.p,{children:"Key migration can be done for both symmetric and asymmetric keys when using the Primus Tools."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The process of key Migration is not exclusive to JCE API and Primus Tools and can be done with other APIs and tools/utilities."})}),"\n",(0,s.jsx)(n.h2,{id:"migration---symmetric-key",children:"Migration - Symmetric Key"}),"\n",(0,s.jsx)(n.p,{children:"The symmetric key migration from origin HSM to target HSM (or other device) process is generally done as such:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create an asymmetric key on the target HSM,"}),"\n",(0,s.jsx)(n.li,{children:"Export the public key from the target HSM,"}),"\n",(0,s.jsx)(n.li,{children:"Import the public key into the origin HSM,"}),"\n",(0,s.jsx)(n.li,{children:"Wrap and export the symmetric key on the origin HSM with the public key from the target HSM,"}),"\n",(0,s.jsx)(n.li,{children:"Import the wrapped symmetric key into the target HSM."}),"\n",(0,s.jsx)(n.li,{children:"Verify the key was successfully imported."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"As an example below we showcase a symmetric key migration done between two Securosys HSMs. It is assumed that the symmetric key to be migrated is already created."})}),"\n",(0,s.jsxs)(n.p,{children:["Commands will require an established HSM connection and credentials to be able to execute properly. For further assistance on how to configure your HSM connection and credentials please see ",(0,s.jsx)(n.a,{href:"/primus-tools/Installation/Provider",children:"HSM Connection and Access Credentials"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to read through and follow the instructions in the ",(0,s.jsx)(n.a,{href:"/primus-tools/Installation/Prerequisites",children:"Installation"})," section before continuing with the process. For more information about the commands and their parameters see ",(0,s.jsx)(n.a,{href:"/primus-tools/Tutorials/command-details/object-management",children:"Object Management"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["The keys to be exported from an HSM must have the flag ",(0,s.jsx)(n.code,{children:"extractable"})," set."]})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create an Asymmetric key on the ",(0,s.jsx)(n.strong,{children:"target"})," HSM:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar CreateKey <HSM connection and credentials> /\n-keyname zmk -type RSA -size 2048\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Export the public part of the asymmetric key ",(0,s.jsx)(n.code,{children:"zmk"})," which was created in the previous step and write it into the file ",(0,s.jsx)(n.code,{children:"zmk.der"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar GetPublicKey <HSM connection and credentials> -keyname zmk > zmk.der\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Import the public key ",(0,s.jsx)(n.code,{children:"zmk.der"})," into the ",(0,s.jsx)(n.strong,{children:"origin"})," HSM:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar ImportPublicKey <HSM connection and credentials> /\n-keyname zmk -keytype RSA /\n-inputfile zmk.der\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["Wrap and export the symmetric key prepared for migration (in our case ",(0,s.jsx)(n.code,{children:"mig"}),") from the origin HSM. The key is wrapped with the imported public key ",(0,s.jsx)(n.code,{children:"zmk"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar ExportKeyWrapped <HSM connection and credentials> /\n-wrapkeyname zmk  /\n-keyname mig -keypassword pass-mig /\n-outfile WrappedKey \n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["Import the ",(0,s.jsx)(n.code,{children:"WrappedKey"})," file from the previous step into the target HSM:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar ImportKeyWrapped <HSM connection and credentials> \n-wrapkeyname zmk /\n-infile WrappedKey /\n-keyname mig -keypassword pass-mig\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsx)(n.li,{children:"Verify that the import was successful by listing the key or inspecting the HSM logs:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar ListKeyEntry <HSM connection and credentials> /\n-keyname mig -keypassword pass-mig\n"})}),"\n",(0,s.jsx)(n.p,{children:"With the import successful the symmetric key migration is concluded."}),"\n",(0,s.jsx)(n.h2,{id:"migration---asymmetric-key",children:"Migration - Asymmetric Key"}),"\n",(0,s.jsx)(n.p,{children:"The symmetric key migration from origin HSM to target HSM (or other device) process is generally done as such:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create an asymmetric key on the target HSM,"}),"\n",(0,s.jsx)(n.li,{children:"Export the public key from the target HSM,"}),"\n",(0,s.jsx)(n.li,{children:"Import the public key into the origin HSM,"}),"\n",(0,s.jsx)(n.li,{children:"Wrap and export the asymmetric key on the origin HSM with the public key from the target HSM,"}),"\n",(0,s.jsx)(n.li,{children:"Import the wrapped asymmetric key into the target HSM."}),"\n",(0,s.jsx)(n.li,{children:"Verify the key was successfully imported."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to read through and follow the instructions in the ",(0,s.jsx)(n.a,{href:"/primus-tools/Installation/Prerequisites",children:"Installation"})," section before continuing with the process. For more information about the commands and their parameters see ",(0,s.jsx)(n.a,{href:"/primus-tools/Tutorials/command-details/object-management",children:"General Usage"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"As an example below we showcase a migration of an asymmetric key done between two Securosys Primus HSMs. It is assumed that the asymmetric key to be migrated is already created."})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["The keys to be exported from an HSM must have the flag ",(0,s.jsx)(n.code,{children:"extractable"})," set."]})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create an asymmetric key on the ",(0,s.jsx)(n.strong,{children:"target"})," HSM:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar CreateKey <HSM connection and credentials> /\n-keyname zmk2 -type RSA -size 2048\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Export the public part of the asymmetric key ",(0,s.jsx)(n.code,{children:"zmk2"})," which was created in the previous step and write it into the file ",(0,s.jsx)(n.code,{children:"zmk2.der"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar GetPublicKey <HSM connection and credentials> -keyname zmk2 > zmk2.der\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Import the public key ",(0,s.jsx)(n.code,{children:"zmk2.der"})," into the ",(0,s.jsx)(n.strong,{children:"origin"})," HSM:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar ImportPublicKey <HSM connection and credentials> /\n-keyname zmk2 -keytype RSA /\n-inputfile zmk2.der\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["Wrap and export the asymmetric key prepared for migration (in our case ",(0,s.jsx)(n.code,{children:"RSAmig"}),") from the origin HSM. The key is wrapped with the imported public key ",(0,s.jsx)(n.code,{children:"zmk2"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar ExportKeyWrapped <HSM connection and credentials> /\n-wrapkeyname zmk2  /\n-keyname RSAmig -keypassword pass-mig /\n-outfile RSAWrappedKey \n"})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["Import the ",(0,s.jsx)(n.code,{children:"WrappedKey"})," file from the previous step into the target HSM:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar ImportKeyWrapped <HSM connection and credentials> \n-wrapkeyname zmk2 /\n-infile RSAWrappedKey /\n-keyname RSAmig -keypassword pass-mig\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsx)(n.li,{children:"Verify that the import was successful by listing the key or inspecting the HSM logs:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"java -jar primus-tools.jar ListKeyEntry <HSM connection and credentials> /\n-keyname RSAmig -keypassword pass-mig\n"})}),"\n",(0,s.jsx)(n.p,{children:"With the import successful the migration of the asymmetric key is concluded."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);