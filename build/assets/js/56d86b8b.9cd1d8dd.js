"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[20096],{28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var n=r(96540);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},51351:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Tutorials/SignImage","title":"How to Sign a Docker Image Step-by-Step Guide","description":"Learn the complete process for signing Docker images, setting up a local registry, using the ORAS CLI, and creating trust policies for secure artifact verification. Perfect for developers and security-conscious teams.","source":"@site/docker_signing/Tutorials/SignImage.md","sourceDirName":"Tutorials","slug":"/Tutorials/SignImage","permalink":"/docker_signing/Tutorials/SignImage","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"How to Sign a Docker Image Step-by-Step Guide","sidebar_label":"Sign Image","description":"Learn the complete process for signing Docker images, setting up a local registry, using the ORAS CLI, and creating trust policies for secure artifact verification. Perfect for developers and security-conscious teams."},"sidebar":"tutorialSidebar","previous":{"title":"Generate CSR \ud83d\udd10","permalink":"/docker_signing/Tutorials/SigningCsr"},"next":{"title":"Updating","permalink":"/docker_signing/Tutorials/PluginUpdate"}}');var i=r(74848),s=r(28453);r(65537),r(79329);const a={sidebar_position:5,title:"How to Sign a Docker Image Step-by-Step Guide",sidebar_label:"Sign Image",description:"Learn the complete process for signing Docker images, setting up a local registry, using the ORAS CLI, and creating trust policies for secure artifact verification. Perfect for developers and security-conscious teams."},o="Signing a Docker Image",c={},l=[{value:"Securosys Docker Signing Notation Plugin",id:"securosys-docker-signing-notation-plugin",level:3},{value:"SKA Keys and Multi-Authorization",id:"ska-keys-and-multi-authorization",level:2},{value:"Create a Trust Policy",id:"create-a-trust-policy",level:2},{value:"Verify Image",id:"verify-image",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"signing-a-docker-image",children:"Signing a Docker Image"})}),"\n",(0,i.jsx)(t.h3,{id:"securosys-docker-signing-notation-plugin",children:"Securosys Docker Signing Notation Plugin"}),"\n",(0,i.jsxs)(t.p,{children:["The Docker image signing procedure below is partly aligned with the actors defined in the ",(0,i.jsx)(t.a,{href:"https://github.com/notaryproject/specifications/blob/main/requirements/scenarios.md#scenario-0-build-publish-consume-enforce-policy-deploy",children:"Notary Notation Project Signing Scenario"})," and the example given in ",(0,i.jsx)(t.a,{href:"https://notaryproject.dev/docs/user-guides/tutorials/trust-policy/",children:"Notary Notation Create Trust Policy and Verify Artifacts"}),", where:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Wabbit Networks company builds, signs and distributes their net-monitor software though public registries,"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"ACME Rockets consumes the net-monitor software from a public registry importing the artifacts and reference artifacts (signatures, SBoMs) into their private registry. The private registry also contains additional artifacts that ACME Rockets sign themselves."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["In the subsequent steps, we set up a registry on the local machine using the ORAS CLI project registry. We proceed to build and tag a Docker image from the net-monitor sources on the GitHub project, and subsequently push it to the local registry. Following this, the image undergoes signing using the key established in ",(0,i.jsx)(t.a,{href:"/docker_signing/Tutorials/CreateSigningKey",children:"chapter"})," and the certificate introduced in ",(0,i.jsx)(t.a,{href:"./GeneratingCertificates",children:"chapter"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"For the sake of simplicity, the procedure does not differentiate between the roles of the signature issuer and verifier."}),"\n",(0,i.jsx)(t.admonition,{title:"Local Registry Setup",type:"danger",children:(0,i.jsxs)(t.p,{children:["The following example creates a registry with ",(0,i.jsx)(t.code,{children:"oras-project/registry"})," in your local Docker environment. This registry should only be used for development purposes. When using other registries, ensure the registry is compatible with OCI Image specification v1.1.0. Starting with v1.0.0-rc.1 of notation, by default, signatures are stored using OCI Artifact Manifest, which is defined in ",(0,i.jsx)(t.a,{href:"https://github.com/opencontainers/image-spec/tree/v1.1.0-rc2",children:"OCI Image spec v1.1.0"}),"."]})}),"\n",(0,i.jsx)(t.p,{children:"Create a local registry based on the oras-project:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"docker run -d -p 5000:5000 ghcr.io/oras-project/registry:v1.0.0-rc.4\n"})}),"\n",(0,i.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,i.jsxs)(t.p,{children:["For Apple silicon, add the ",(0,i.jsx)(t.code,{children:"--platform linux/arm64"})," parameter."]})}),"\n",(0,i.jsx)(t.admonition,{title:"Registry Version Note",type:"danger",children:(0,i.jsxs)(t.p,{children:["Use ",(0,i.jsx)(t.code,{children:"oras-project/registry:v1.0.0-rc.4"}),". The version ",(0,i.jsx)(t.code,{children:"v1.0.0-rc.3"})," as describe ",(0,i.jsx)(t.a,{href:"https://notaryproject.dev/docs/user-guides/tutorials/trust-policy/",children:"here"})," will fail at the signing command."]})}),"\n",(0,i.jsxs)(t.p,{children:["Clone from github repository, build the docker image, add image tag (",(0,i.jsx)(t.code,{children:"net-monitor:v1"}),"). Then push it to your local registry:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"docker buildx build -t localhost:5000/net-monitor:v1 https://github.com/wabbit-networks/net-monitor.git#main\n\ndocker push localhost:5000/net-monitor:v1\n"})}),"\n",(0,i.jsx)(t.admonition,{title:"Use Immutable Digests",type:"danger",children:(0,i.jsx)(t.p,{children:"Always use the digest value of an image when signing since they are immutable. Tag values are mutable and can reference a different container image than the original signed container image."})}),"\n",(0,i.jsxs)(t.p,{children:["Save the digest value of the image from the output of ",(0,i.jsx)(t.code,{children:"docker push"}),". Example:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"The push refers to repository [localhost:5000/net-monitor] \n\n2556c54bfdf3: Pushed \n\nfb6ca4f9c8d3: Pushed \n\nded7a220bb05: Pushed \n\nv1: digest: sha256: 9bba24af535af5ce658c5cd78c865d574cb65443c643d8538b73ea7d3e9bb64e size: 942\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Alternatively, you can find the image digest using the ",(0,i.jsx)(t.code,{children:"docker inspect"})," or ",(0,i.jsx)(t.code,{children:"docker images --digests"})," command.\nIn the above example, the digest value of the image is:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"sha256:9bba24af535af5ce658c5cd78c865d574cb65443c643d8538b73ea7d3e9bb64e\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Set the value of ",(0,i.jsx)(t.code,{children:"$IMAGE"})," environment variable to the name of the image and its digest value to facilitate the use of subsequent commands:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"IMAGE=localhost:5000/net-monitor@sha256:9bba24af535af5ce658c5cd78c865d574cb65443c643d8538b73ea7d3e9bb64e\n"})}),"\n",(0,i.jsx)(t.p,{children:"Use the below command to list the current signatures for the image and confirm there are no signatures listed:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"notation ls $IMAGE \n\nlocalhost:5000/net-monitor@sha256: 9bba24af535af5ce658c5cd78c865d574cb65443c643d8538b73ea7d3e9bb64e has no associated signature \n"})}),"\n",(0,i.jsxs)(t.p,{children:["Change the working directory to ",(0,i.jsx)(t.code,{children:"$CONFIG_PATH"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"cd $CONIFG_PATH\n"})}),"\n",(0,i.jsx)(t.p,{children:"Use notation sign to sign the image:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:'notation sign $IMAGE --key "keyId"\n'})}),"\n",(0,i.jsx)(t.p,{children:"Notation sign command parameters:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Command parameters"}),(0,i.jsx)(t.th,{children:"Command and parameter description"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"keyId": "pluginKeyId"'})}),(0,i.jsx)(t.td,{children:"Replace the variable with your signing key identifier."})]})})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"ska-keys-and-multi-authorization",children:"SKA Keys and Multi-Authorization"}),"\n",(0,i.jsxs)(t.p,{children:["If you have configured your key with multi-authorization policies based on ",(0,i.jsx)(t.a,{href:"/tsb/Tutorials/TransactionSecurityBroker/smart-key-attributes",children:"Smart Key Attributes (SKA)"}),', the signing operation will only be executed if the approvals are provided in a timely manner and in the quantity specified by the "usage" policy.']}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"create-a-trust-policy",children:"Create a Trust Policy"}),"\n",(0,i.jsx)(t.p,{children:"Users who consume a signed artifact from a registry use the trust policy to specify trusted identities which will sign the artifacts, and level of signature verification to use. The trust policy must be defined manually in a JSON document."}),"\n",(0,i.jsxs)(t.p,{children:["Create or edit the notation trust policy ",(0,i.jsx)(t.code,{children:"trustpolicy.json"})," file in the ",(0,i.jsx)(t.code,{children:"{NOTATION_CONFIG}"})," directory. Create the file by executing the command:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"vi ${HOME}/.config/notation/trustpolicy.json \n"})}),"\n",(0,i.jsxs)(t.p,{children:['Add a trust policy with the following structure:\nGo to section "policy" in the ',(0,i.jsx)(t.code,{children:"input_example.json"})," file and prepare the parameters, according to ",(0,i.jsx)(t.a,{href:"./CreateSigningKey#prepare-docker-image-signing-key-parameters",children:"chapter"})," (use any editor you are familiar with):"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:'{\n    "version": "1.0",\n    "trustPolicies": [\n        {\n            "name": "trust-policy-example",\n            "registryScopes": [ "*" ],\n            "signatureVerification": {\n                "level" : "strict" \n            },\n            "trustStores": [ "ca:valid-example" ],\n            "trustedIdentities": [\n                "*"\n            ]\n        }\n    ]\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Replace the variables according to your parameters:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Policy parameters"}),(0,i.jsx)(t.th,{children:"Command and parameter description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"version": "1.0"'})}),(0,i.jsx)(t.td,{children:"The parameter is the version of the trust policy. The supported value is 1.0."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"trustPolicies"'})}),(0,i.jsx)(t.td,{children:"The parameter represents a collection of trust policies."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"name": "trust-policy-name"'})}),(0,i.jsx)(t.td,{children:"Replace the variable with the name of your trust policy."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"registryScopes": [ "*" ]'})}),(0,i.jsxs)(t.td,{children:["The parameter determines the registry artifacts to which the trust policy applies. The scope field supports filtering based on fully qualified repository URI",(0,i.jsx)("br",{})," ",(0,i.jsx)(t.code,{children:"${registry-name}/${namespace}/${repository-name}"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"signatureVerification": {...}'})}),(0,i.jsxs)(t.td,{children:["The parameter dictates how signature verification is performed. An ",(0,i.jsx)(t.em,{children:"object"})," that specifies a predefined verification level. Parameter values:",(0,i.jsx)("br",{})," ",(0,i.jsx)(t.code,{children:"strict"}),", ",(0,i.jsx)(t.code,{children:"permissive"}),", ",(0,i.jsx)(t.code,{children:"audit"}),".",(0,i.jsx)("br",{})," Detailed explanation of each level can be found ",(0,i.jsx)(t.a,{href:"https://github.com/notaryproject/specifications/blob/main/specs/trust-store-trust-policy.md#signatureverification-details",children:"here"}),". Keep the level at strict for this guide."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"trustStores": [ "ca:trustStoreName" ]'})}),(0,i.jsxs)(t.td,{children:["The parameter specifies a set of one or more named trust stores, each of which contain the trusted roots against which signatures are verified. Each named trust store uses the format ",(0,i.jsx)(t.code,{children:"{trust-store-type}:{named-store}"}),".Replace the variable with your named store. Currently supported values for trust store types are:",(0,i.jsx)("br",{})," ",(0,i.jsx)(t.code,{children:"CA"}),", ",(0,i.jsx)(t.code,{children:"Signing Authority"}),", ",(0,i.jsx)(t.code,{children:"TSA"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"trustIdentities": "[ "*" ]"'})}),(0,i.jsxs)(t.td,{children:["Identities that are trusted to sign the artifact, supported values:",(0,i.jsx)("br",{})," - E.g. x509.subject: C=US, ST=WA, L=Seattle, O=acme-rockets.io, OU=Finance, CN=SecureBuilder"]})]})]})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:"Example trustpolicy.json file:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:'{ \n  "version": "1.0", \n\n  "trustPolicies": [ \n\n    { \n\n      "name": "securosys-trust-policy", \n\n      "registryScopes": [ "*" ], \n\n      "signatureVerification": { \n\n        "level": "strict" \n\n      }, \n\n      "trustStores": [ "ca:securosysTrustStore" ], \n\n      "trustedIdentities": [ "*" ] \n    } \n  ] \n} \n'})}),"\n",(0,i.jsx)(t.p,{children:"For more information on the trust policies for Notation check the following documents:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://notaryproject.dev/docs/user-guides/tutorials/trust-policy/",children:"Notary Notation Trust Policy"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://github.com/notaryproject/specifications/blob/main/specs/trust-store-trust-policy.md#signatureverification-details",children:"Notary Notation Trust Policy Specs"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"verify-image",children:"Verify Image"}),"\n",(0,i.jsxs)(t.p,{children:["Use ",(0,i.jsx)(t.code,{children:"notation verify"})," to validate the image:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"notation verify $IMAGE\n"})}),"\n",(0,i.jsx)(t.p,{children:"Example of successful image signature verification response:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"Successfully verified signature for localhost:5000/net-monitor@sha256:9bba24af535af5ce658c5cd78c865d574cb65443c643d8538b73ea7d3e9bb64e \n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65537:(e,t,r)=>{r.d(t,{A:()=>S});var n=r(96540),i=r(34164),s=r(65627),a=r(56347),o=r(50372),c=r(30604),l=r(11861),d=r(78749);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:i}}=e;return{value:t,label:r,attributes:n,default:i}}))}(r);return function(e){const t=(0,l.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function p(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:r}=e;const i=(0,a.W6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,c.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(i.location.search);t.set(s,e),i.replace({...i.location,search:t.toString()})}),[s,i])]}function m(e){const{defaultValue:t,queryString:r=!1,groupId:i}=e,s=h(e),[a,c]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[l,u]=g({queryString:r,groupId:i}),[m,f]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,s]=(0,d.Dv)(r);return[i,(0,n.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:i}),x=(()=>{const e=l??m;return p({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{x&&c(x)}),[x]);return{selectedValue:a,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var f=r(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=r(74848);function b(e){let{className:t,block:r,selectedValue:n,selectValue:a,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),d=e=>{const t=e.currentTarget,r=c.indexOf(t),i=o[r].value;i!==n&&(l(t),a(i))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;t=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;t=c[r]??c[c.length-1];break}}t?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":r},t),children:o.map((e=>{let{value:t,label:r,attributes:s}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>{c.push(e)},onKeyDown:u,onClick:d,...s,className:(0,i.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function y(e){let{lazy:t,children:r,selectedValue:s}=e;const a=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function v(e){const t=m(e);return(0,j.jsxs)("div",{className:(0,i.A)("tabs-container",x.tabList),children:[(0,j.jsx)(b,{...t,...e}),(0,j.jsx)(y,{...t,...e})]})}function S(e){const t=(0,f.A)();return(0,j.jsx)(v,{...e,children:u(e.children)},String(t))}},79329:(e,t,r)=>{r.d(t,{A:()=>a});r(96540);var n=r(34164);const i={tabItem:"tabItem_Ymn6"};var s=r(74848);function a(e){let{children:t,hidden:r,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(i.tabItem,a),hidden:r,children:t})}}}]);