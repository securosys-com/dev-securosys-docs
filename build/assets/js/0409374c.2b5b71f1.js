"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[98743],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(96540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},64556:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"libp11/Tutorial/openssl_cli","title":"OpenSSL v1.x Command Line Interface (CLI)","description":"Discover OpenSSL\'s PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.","source":"@site/openssl/libp11/Tutorial/openssl_cli.md","sourceDirName":"libp11/Tutorial","slug":"/libp11/Tutorial/openssl_cli","permalink":"/openssl/libp11/Tutorial/openssl_cli","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"OpenSSL","permalink":"/openssl/tags/open-ssl"},{"inline":true,"label":"PKCS#11","permalink":"/openssl/tags/pkcs-11"},{"inline":true,"label":"CLI","permalink":"/openssl/tags/cli"}],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"OpenSSL v1.x Command Line Interface (CLI)","sidebar_label":"OpenSSL CLI","description":"Discover OpenSSL\'s PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.","keywords":["OpenSSL PKCS11 provider","OpenSSL PKCS11 API","OpenSSL command line utility (CLI)","OpenSSL CLI commands","OpenSSL installation guide","OpenSSL installation troubleshooting","OpenSSL troubleshooting tips","OpenSSL certificate management","OpenSSL certificate creation","OpenSSL certificate renewal","OpenSSL configuration file","OpenSSL configuration options","OpenSSL configuration guide","OpenSSL encryption algorithms","OpenSSL decryption methods","OpenSSL digital signatures","OpenSSL SSL/TLS protocols","OpenSSL SSL/TLS configuration","OpenSSL heartbleed vulnerability","OpenSSL security updates"],"tags":["OpenSSL","PKCS#11","CLI"]},"sidebar":"openssl","previous":{"title":"Tutorial","permalink":"/openssl/category/tutorial-1"},"next":{"title":"OpenSSL v1.x - P11-kit","permalink":"/openssl/category/openssl-v1x---p11-kit"}}');var r=t(74848),s=t(28453),a=t(65537),l=t(79329);const o={sidebar_position:1,title:"OpenSSL v1.x Command Line Interface (CLI)",sidebar_label:"OpenSSL CLI",description:"Discover OpenSSL's PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.",keywords:["OpenSSL PKCS11 provider","OpenSSL PKCS11 API","OpenSSL command line utility (CLI)","OpenSSL CLI commands","OpenSSL installation guide","OpenSSL installation troubleshooting","OpenSSL troubleshooting tips","OpenSSL certificate management","OpenSSL certificate creation","OpenSSL certificate renewal","OpenSSL configuration file","OpenSSL configuration options","OpenSSL configuration guide","OpenSSL encryption algorithms","OpenSSL decryption methods","OpenSSL digital signatures","OpenSSL SSL/TLS protocols","OpenSSL SSL/TLS configuration","OpenSSL heartbleed vulnerability","OpenSSL security updates"],tags:["OpenSSL","PKCS#11","CLI"]},c="Tutorial: OpenSSL v1.x CLI",u={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Generating Key Pair, Certificate Signing Request (CSR), and Importing Certificate",id:"generating-key-pair-certificate-signing-request-csr-and-importing-certificate",level:2},{value:"Generate a Key Pair",id:"generate-a-key-pair",level:3},{value:"Create a CSR",id:"create-a-csr",level:3},{value:"Import the Certificate",id:"import-the-certificate",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tutorial-openssl-v1x-cli",children:"Tutorial: OpenSSL v1.x CLI"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["You can use the OpenSSL command-line interface (CLI) to interact with the Primus HSM through the PKCS#11 Engine Plugin, enabling secure communication between your applications and the HSM. The OpenSSL CLI serves as a versatile tool for various cryptographic operations, including key management and certificate generation, while leveraging the security features of the Primus HSM. For a comprehensive guide on available commands and options, refer to the ",(0,r.jsx)(n.a,{href:"https://docs.openssl.org/master/man1/openssl/",children:"OpenSSL manpage"}),", which provides a detailed overview of all supported functionalities and usage instructions."]}),"\n",(0,r.jsx)(n.h2,{id:"generating-key-pair-certificate-signing-request-csr-and-importing-certificate",children:"Generating Key Pair, Certificate Signing Request (CSR), and Importing Certificate"}),"\n",(0,r.jsxs)(n.p,{children:["In this section, we will guide you through the steps of generating a key pair, creating a Certificate Signing Request (CSR), and importing a certificate into the Primus HSM. First, you will use the ",(0,r.jsx)(n.code,{children:"pkcs11-tool"})," to generate an RSA or EC key pair within the HSM, ensuring secure key generation and storage. Next, we\u2019ll demonstrate how to create a CSR using OpenSSL, allowing you to request a certificate from a Certificate Authority (CA) based on the generated key. Finally, you will show how to import the issued certificate back into the HSM using the ",(0,r.jsx)(n.code,{children:"pkcs11-tool"}),", completing the process of securing your key pair and certificate within the HSM environment."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The following examples use the OpenSSL command-line interface with a customized configuration for the Primus HSM PKCS#11 provider, as described ",(0,r.jsx)(n.a,{href:"/openssl/libp11/Installation/configuration",children:"here"}),". The HSM partition is mounted as slot 0."]})}),"\n",(0,r.jsx)(n.h3,{id:"generate-a-key-pair",children:"Generate a Key Pair"}),"\n",(0,r.jsxs)(a.A,{groupId:"key",children:[(0,r.jsxs)(l.A,{value:"rsa",label:"RSA",default:!0,children:[(0,r.jsxs)(n.p,{children:["Generating a new key pair using ",(0,r.jsx)(n.code,{children:"pkcs11-tool"}),": 2048-bit RSA, CKA_SENSITIVE set, using slot 0:"]}),(0,r.jsxs)(a.A,{groupId:"os",children:[(0,r.jsx)(l.A,{value:"os-windows",label:"Windows",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'pkcs11-tool --module "C:\\Program Files\\Securosys\\Primus P11\\primusP11.dll" --slot=0 \\\n   -l -p <PKCS11 PIN> --keypairgen --key-type RSA:2048 \\\n   --id 1001 --label myrsakey --sensitive\n'})})}),(0,r.jsx)(l.A,{value:"os-linux",label:"Linux",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pkcs11-tool --module /usr/local/primus/lib/libprimusP11.so --slot=0 \\\n   --login --pin <PKCS11 PIN> --keypairgen --key-type RSA:2048 \\\n   --id 1001 --label myrsakey --sensitive           \n"})})})]}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"<PKCS11 PIN>"})," with the PKCS#11 PIN of your HSM."]})}),(0,r.jsx)(n.p,{children:"After successfully executing the command, the output will look like as follows:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Using slot 0 with a present token (0x0)\nKey pair generated:\nPrivate Key Object; RSA \n label: myrsakey\n ID: 1001\n Usage: decrypt, sign, unwrap\nPublic Key Object; RSA 2048 bits\n label: myrsakey\n ID: 1001\n Usage: encrypt, verify, wrap\n"})})]}),(0,r.jsxs)(l.A,{value:"ec",label:"EC",children:[(0,r.jsxs)(n.p,{children:["Generating a new key pair using ",(0,r.jsx)(n.code,{children:"pkcs11-tool"}),": Elliptic Curve secp384r1, using slot 0:"]}),(0,r.jsxs)(a.A,{groupId:"os",children:[(0,r.jsx)(l.A,{value:"os-windows",label:"Windows",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'pkcs11-tool --module "C:\\Program Files\\Securosys\\Primus P11\\primusP11.dll" \\\n  --slot=0 -l -p <PKCS11 PIN> --keypairgen \\\n  --key-type EC:secp384r1 --id 1002 --label myeckey\n'})})}),(0,r.jsx)(l.A,{value:"os-linux",label:"Linux",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pkcs11-tool --module /usr/local/primus/lib/libprimusP11.so \\\n   -slot=0 --login --pin <PKCS11 PIN> --keypairgen \\\n   --key-type EC:secp384r1 --id 1002 --label myeckey\n"})})})]}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"<PKCS11 PIN>"})," with the PKCS#11 PIN of your HSM."]})}),(0,r.jsx)(n.p,{children:"After successfully executing the command, the output will look like as follows:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Using slot 0 with a present token (0x0)\nKey pair generated:\nPrivate Key Object; EC\n label: myeckey\n ID: 1002\n Usage: sign, derive\nPublic Key Object; EC EC_POINT 384 bits\n EC_POINT: \n046104fb05c1978b6d700e4adb629f81194f5a9c4a06ba4ffe50c41c9165630021fbecd5e91a72db8e48f5d0\n5c81a8dd5d55eca1722587f1f13b9fc4e622eb54b07a15d18f77d774326c3f35abe69ca3a7de53a8e92e2cf2\nc44e1a9a34f52fdbacf71b\n EC_PARAMS: 06052b81040022\n label: myeckey\n ID: 1002\n Usage: verify, derive\n"})})]})]}),"\n",(0,r.jsx)(n.h3,{id:"create-a-csr",children:"Create a CSR"}),"\n",(0,r.jsxs)(n.p,{children:["Generate the CSR interactively, using ",(0,r.jsx)(n.code,{children:"openssl"})," by referencing the key ID on the HSM by the key ID:"]}),"\n",(0,r.jsxs)(a.A,{groupId:"key",children:[(0,r.jsxs)(l.A,{value:"rsa",label:"RSA",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'openssl req -engine pkcs11 -new \\\n   -key "pkcs11:token=<partition-name>;id=%10%01;type=private" \\\n   -keyform engine -out rsa.hsm.csr -sha256 -verify\n'})}),(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"<partition-name>"})," with the name of your partition on your HSM."]}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Notice that pkcs11-tool writes the key id in hexadecimal notation to the HSM (e.g. ",(0,r.jsx)(n.code,{children:"%10%01"}),")"]})})]}),(0,r.jsx)(l.A,{value:"ec",label:"EC",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'openssl req -engine pkcs11 -new \\\n   -key "pkcs11:token=<partition-name>;object=myeckey;type=private" \\\n   -keyform engine -out ec.hsm.csr -sha384 -verify\n'})})})]}),"\n",(0,r.jsx)(n.p,{children:"After successfully executing the command, the output will look like as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"You are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:CH\nState or Province Name (full name) []:ZH\nLocality Name (eg, city) [Default City]:Zuerich\nOrganization Name (eg, company) [Default Company Ltd]:Securosys SA\nOrganizational Unit Name (eg, section) []:IT\nCommon Name (eg, your name or your server's hostname) []:cos8.securosys.ch\nEmail Address []:cos8@securosys.ch\n\u2026\nverify OK\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively, you can issue a self signed certificate using ",(0,r.jsx)(n.code,{children:"openssl"}),":"]}),"\n",(0,r.jsxs)(a.A,{groupId:"key",children:[(0,r.jsxs)(l.A,{value:"rsa",label:"RSA",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'openssl req -engine pkcs11 -new -x509 \\\n   -key "pkcs11:token=<partition-name>;id=%10%01;type=private" \\\n   -keyform engine -out rsa.hsm.crt -sha256 -days 365 -nodes\n'})}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Notice that pkcs11-tool writes the key id in hexadecimal notation to the HSM (e.g. ",(0,r.jsx)(n.code,{children:"%10%01"}),")"]})})]}),(0,r.jsx)(l.A,{value:"ec",label:"EC",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'openssl req -engine pkcs11 -new -x509 \\\n   -key "pkcs11:token=<partition-name>;object=myeckey;type=private" \\\n   -keyform engine -out ec.hsm.crt -sha384 -days 365 -nodes\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"import-the-certificate",children:"Import the Certificate"}),"\n",(0,r.jsxs)(n.p,{children:["If required, import the signed certificate *.hsm.crt (",(0,r.jsx)(n.code,{children:"der"})," format), using ",(0,r.jsx)(n.code,{children:"pkcs11-tool"}),":"]}),"\n",(0,r.jsxs)(a.A,{groupId:"key",children:[(0,r.jsxs)(l.A,{value:"rsa",label:"RSA",default:!0,children:[(0,r.jsxs)(a.A,{groupId:"os",children:[(0,r.jsx)(l.A,{value:"os-windows",label:"Windows",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'pkcs11-tool --module "C:\\Program Files\\Securosys\\Primus P11\\primusP11.dll" -l \\\n   -p <PKCS11 PIN> --slot=0 --write-object rsa.hsm.crt \\\n   --type cert --id 1001 --label myrsakey\n'})})}),(0,r.jsx)(l.A,{value:"os-linux",label:"Linux",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pkcs11-tool --module /usr/local/primus/lib/libprimusP11.so -l \\\n   -p <PKCS11 PIN> --slot 0 --write-object rsa.hsm.crt \\\n   --type cert --id 1001 --label myrsakey\n"})})})]}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"<PKCS11 PIN>"})," with the PKCS#11 PIN of your HSM."]})}),(0,r.jsx)(n.p,{children:"After successfully executing the command, the output will look like as follows:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Using slot with ID 0x0\nCreated certificate:\nCertificate Object; type = X.509 cert\n label: myrsakey\n subject: DN: C=CH, O=Securosys SA, OU=IT, CN=cos8.securosys.ch\n ID: 1001\n"})})]}),(0,r.jsxs)(l.A,{value:"ec",label:"EC",children:[(0,r.jsxs)(a.A,{groupId:"os",children:[(0,r.jsx)(l.A,{value:"os-windows",label:"Windows",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'pkcs11-tool --module "C:\\Program Files\\Securosys\\Primus P11\\primusP11.dll" -l \\\n-p <PKCS11 PIN> --slot=0 --write-object ec.hsm.crt \\\n--type cert --id 1002 --label myeckey\n'})})}),(0,r.jsx)(l.A,{value:"os-linux",label:"Linux",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pkcs11-tool --module /usr/local/primus/lib/libprimusP11.so -l \\\n   -p <PKCS\\#11 PIN> --slot 0 --write-object ec.hsm.crt \\\n   --type cert --id 1002 --label myeckey\n"})})})]}),(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"<PKCS11 PIN>"})," with the PKCS#11 PIN of your HSM."]})}),(0,r.jsx)(n.p,{children:"After successfully executing the command, the output will look like as follows:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Using slot with ID 0x0\nCreated certificate:\nCertificate Object; type = X.509 cert\n label: myeckey\n subject: DN: C=CH, O=Securosys SA, OU=IT, CN=cos8.securosys.ch\n ID: 1002\n"})})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},65537:(e,n,t)=>{t.d(n,{A:()=>v});var i=t(96540),r=t(34164),s=t(65627),a=t(56347),l=t(50372),o=t(30604),c=t(11861),u=t(78749);function d(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function S(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=p(e),[a,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[c,d]=m({queryString:t,groupId:r}),[S,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,u.Dv)(t);return[r,(0,i.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),f=(()=>{const e=c??S;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{f&&o(f)}),[f]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),g(e)}),[d,g,s]),tabValues:s}}var g=t(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(74848);function b(e){let{className:n,block:t,selectedValue:i,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),r=l[t].value;r!==i&&(c(n),a(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>{o.push(e)},onKeyDown:d,onClick:u,...s,className:(0,r.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function j(e){const n=S(e);return(0,y.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,y.jsx)(b,{...n,...e}),(0,y.jsx)(x,{...n,...e})]})}function v(e){const n=(0,g.A)();return(0,y.jsx)(j,{...e,children:d(e.children)},String(n))}},79329:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var i=t(34164);const r={tabItem:"tabItem_Ymn6"};var s=t(74848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,a),hidden:t,children:n})}}}]);