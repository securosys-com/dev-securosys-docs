"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[17542],{17077:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Installation/docker","title":"Installing Vault Community with Docker","description":"Installing HashiCorp Vault Community with Docker","source":"@site/hc_vault/Installation/docker.md","sourceDirName":"Installation","slug":"/Installation/docker","permalink":"/hc_vault/Installation/docker","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":0,"frontMatter":{"sidebar_position":0,"title":"Installing Vault Community with Docker","sidebar_label":"with Docker","description":"Installing HashiCorp Vault Community with Docker","keywords":["hsm","cloud hsm"]},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/hc_vault/category/installation"},"next":{"title":"with Golang","permalink":"/hc_vault/Installation/golang"}}');var t=s(74848),o=s(28453);const r={sidebar_position:0,title:"Installing Vault Community with Docker",sidebar_label:"with Docker",description:"Installing HashiCorp Vault Community with Docker",keywords:["hsm","cloud hsm"]},a="Installation using Docker",c={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Run Container",id:"run-container",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"installation-using-docker",children:"Installation using Docker"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Docker"})," simplifies the configuration and deployment of container applications."]}),"\n",(0,t.jsxs)(n.p,{children:["By defining services in the ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," file and customizing the parameters to suit your needs, you can easily create and start ",(0,t.jsx)(n.strong,{children:"Hashicorp Vault"})," with a single command."]}),"\n",(0,t.jsx)(n.admonition,{title:"prerequisites",type:"tip",children:(0,t.jsxs)(n.p,{children:["Ensure ",(0,t.jsx)(n.a,{href:"../Quickstart/docker#prerequisites",children:"docker"})," and ",(0,t.jsx)(n.a,{href:"../Quickstart/docker#prerequisites",children:"docker-compose"})," are installed on your machine."]})}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Prepare the additional configurations files for docker image:"}),"\n",(0,t.jsx)(n.admonition,{title:"note",type:"note",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"{$version}"})," has to be replaced with the ",(0,t.jsx)(n.a,{href:"/hc_vault/Downloads/release_notes",children:"current version"})," of the docker image."]})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"File"})," ",(0,t.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",metastring:"{14}",children:'version: "3.3"\nservices:\n  run:\n    container_name: securosys_hashicorp_vault\n    environment:\n      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"\n    volumes:\n      - securosys_hashicorp_vault_config:/etc/app/config\n      - securosys_hashicorp_vault_db:/etc/app/db\n      - securosys_hashicorp_vault_plugins:/etc/app/plugins\n    ports:\n      - "0.0.0.0:8200:8200"\n      - "0.0.0.0:8201:8201"\n    image: securosys.jfrog.io/hcvault-ce-rest-integration/hcvault-ce-rest-integration:1.2.5.20231207103736\nvolumes:\n  securosys_hashicorp_vault_config:\n    driver: local\n    driver_opts:\n      o: bind\n      type: none\n      # Local absolute path to directory which contains all config files\n      device: ./config/vault\n  securosys_hashicorp_vault_db:\n    driver: local\n    driver_opts:\n      o: bind\n      type: none\n      # Local absolute path to directory where we want to store database\n      device: ./config/db\n  securosys_hashicorp_vault_plugins:\n    driver: local\n    driver_opts:\n      o: bind\n      type: none\n      # Local absolute path to directory where are stored custom plugins\n      device: ./config/plugins\n\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"File"})," ",(0,t.jsx)(n.code,{children:"config.hcl"}),":"]}),"\n",(0,t.jsx)(n.p,{children:"The configuration file differs slightly from the standalone version."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'//Example of config.hcl for Docker image.\n//Addresses or paths are relative to path and addresses inside docker image\n\nstorage "raft" {\n  path = "/etc/app/db" //Do not change this path\n  node_id = "raft_node"\n}\n\nlistener "tcp" {\n  address     = "0.0.0.0:8200" //Do not change this path\n  tls_disable = 1\n}\n\ndisable_mlock=true\nplugin_directory="/etc/app/plugins" //Do not change this path\napi_addr = "http://0.0.0.0:8200" //Do not change this addr\ncluster_addr = "https://127.0.0.1:8201" //Do not change this addr\nui = true\n\n\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:['Add below the config section seal "securosys-hsm" as shown in the ',(0,t.jsx)(n.a,{href:"/hc_vault/Concepts/autounseal",children:"auto-unseal chapter"})]})}),"\n",(0,t.jsx)(n.h2,{id:"run-container",children:"Run Container"}),"\n",(0,t.jsxs)(n.p,{children:["Once your ",(0,t.jsx)(n.strong,{children:"Hashicorp Vault"})," instance is fully configured, you can launch the application with the command: ",(0,t.jsx)(n.code,{children:"docker-compose up"}),", execute in the directory where the ",(0,t.jsx)(n.em,{children:"docker-compose.yml"})," file is located."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the command ",(0,t.jsx)(n.code,{children:"securosys_hashicorp_vault"})," to initiate the startup process of the service."]}),"\n",(0,t.jsx)(n.admonition,{title:"Transaction Security Broker (TSB) - Dispatched",type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"docker-compose up -d"})," starts the contianers in dispatched mode",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:["Credentials:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["User: ",(0,t.jsx)(n.code,{children:"robot.reader.hashicorpvault"})]}),"\n",(0,t.jsxs)(n.li,{children:["Password: ",(0,t.jsx)(n.code,{children:"FTTGEcruzB_QUf3LBsq+KVV3wYuSx_"})]}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"    :~/$ docker login securosys.jfrog.io -u robot.reader.hashicorpvault\n    Password:\n    Login Succeeded\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(96540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);