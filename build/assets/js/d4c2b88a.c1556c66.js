"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[33775],{28453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>s});var i=t(96540);const n={},a=i.createContext(n);function o(e){const r=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(a.Provider,{value:r},e.children)}},38017:(e,r,t)=>{t.d(r,{A:()=>i});const i=t.p+"assets/images/Cryptography-for-CA-67a5becde372f6b9361b69ae54700db5.png"},65537:(e,r,t)=>{t.d(r,{A:()=>S});var i=t(96540),n=t(34164),a=t(65627),o=t(56347),s=t(50372),l=t(30604),c=t(11861),u=t(78749);function d(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:r,children:t}=e;return(0,i.useMemo)((()=>{const e=r??function(e){return d(e).map((e=>{let{props:{value:r,label:t,attributes:i,default:n}}=e;return{value:r,label:t,attributes:i,default:n}}))}(t);return function(e){const r=(0,c.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function p(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function m(e){let{queryString:r=!1,groupId:t}=e;const n=(0,o.W6)(),a=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,l.aZ)(a),(0,i.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(n.location.search);r.set(a,e),n.replace({...n.location,search:r.toString()})}),[a,n])]}function f(e){const{defaultValue:r,queryString:t=!1,groupId:n}=e,a=h(e),[o,l]=(0,i.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!p({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:r,tabValues:a}))),[c,d]=m({queryString:t,groupId:n}),[f,g]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,a]=(0,u.Dv)(t);return[n,(0,i.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:n}),y=(()=>{const e=c??f;return p({value:e,tabValues:a})?e:null})();(0,s.A)((()=>{y&&l(y)}),[y]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,a]),tabValues:a}}var g=t(9136);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function b(e){let{className:r,block:t,selectedValue:i,selectValue:o,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),u=e=>{const r=e.currentTarget,t=l.indexOf(r),n=s[t].value;n!==i&&(c(r),o(n))},d=e=>{let r=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;r=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;r=l[t]??l[l.length-1];break}}r?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":t},r),children:s.map((e=>{let{value:r,label:t,attributes:a}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:i===r?0:-1,"aria-selected":i===r,ref:e=>{l.push(e)},onKeyDown:d,onClick:u,...a,className:(0,n.A)("tabs__item",y.tabItem,a?.className,{"tabs__item--active":i===r}),children:t??r},r)}))})}function C(e){let{lazy:r,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=o.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map(((e,r)=>(0,i.cloneElement)(e,{key:r,hidden:e.props.value!==a})))})}function x(e){const r=f(e);return(0,v.jsxs)("div",{className:(0,n.A)("tabs-container",y.tabList),children:[(0,v.jsx)(b,{...r,...e}),(0,v.jsx)(C,{...r,...e})]})}function S(e){const r=(0,g.A)();return(0,v.jsx)(x,{...e,children:d(e.children)},String(r))}},79329:(e,r,t)=>{t.d(r,{A:()=>o});t(96540);var i=t(34164);const n={tabItem:"tabItem_Ymn6"};var a=t(74848);function o(e){let{children:r,hidden:t,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.A)(n.tabItem,o),hidden:t,children:r})}},82332:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Installation/Installation-Overview","title":"Configuring the Cryptographic Provider for Microsoft AD CS","description":"Configuring the Cryptographic Provider to use Microsoft Active Directory Certificate Services (AD CS) with Securosys Hardware Security Modules (HSMs)","source":"@site/ms-pki-adcs/Installation/Installation-Overview.md","sourceDirName":"Installation","slug":"/Installation/Installation-Overview","permalink":"/ms-pki-adcs/Installation/Installation-Overview","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Configuring the Cryptographic Provider for Microsoft AD CS","sidebar_label":"3. Cryptographic Provider","description":"Configuring the Cryptographic Provider to use Microsoft Active Directory Certificate Services (AD CS) with Securosys Hardware Security Modules (HSMs)","keywords":["hsm","cloud hsm"]},"sidebar":"tutorialSidebar","previous":{"title":"2. Installing CNG Provider","permalink":"/ms-pki-adcs/Installation/Provider-Setup"},"next":{"title":"Tutorials","permalink":"/ms-pki-adcs/category/tutorials"}}');var n=t(74848),a=t(28453),o=t(65537),s=t(79329);const l={sidebar_position:2,title:"Configuring the Cryptographic Provider for Microsoft AD CS",sidebar_label:"3. Cryptographic Provider",description:"Configuring the Cryptographic Provider to use Microsoft Active Directory Certificate Services (AD CS) with Securosys Hardware Security Modules (HSMs)",keywords:["hsm","cloud hsm"]},c="Configuring the Cryptographic Provider",u={},d=[{value:"Select Microsoft AD CS Cryptographic Provider",id:"select-microsoft-ad-cs-cryptographic-provider",level:2}];function h(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"configuring-the-cryptographic-provider",children:"Configuring the Cryptographic Provider"})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"This procedure offers a primarily straightforward integration process. However, please note that there are additional methods available for configuring and setting up Microsoft AD CS."})}),"\n",(0,n.jsx)(r.p,{children:"This guide assumes you have a basic understanding of the Primus HSM and Microsoft Server AD CS. It does not detail every step of the hardware and software setup process."}),"\n",(0,n.jsxs)(r.p,{children:["For the sake of simplicity, only the ",(0,n.jsx)(r.strong,{children:"domain administrator"})," role is used instead of the PKI management roles defined by Microsoft."]}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.strong,{children:"How to migrate from Microsoft AD CS to Primus HSM?"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsxs)(r.a,{href:"/ms-pki-adcs/Tutorials/Migrating-MPKI-to-HSM/Migrating-MPKI-toHSM",children:["Tutorial - Migrate an ",(0,n.jsx)(r.strong,{children:"existing"})," instance"]}),","]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsxs)(r.a,{href:"/ms-pki-adcs/Tutorials/Migrating-MSPKI/Setup-Overview",children:["Tutorial - Migrate a ",(0,n.jsx)(r.strong,{children:"new"})," instance"]}),"."]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"select-microsoft-ad-cs-cryptographic-provider",children:"Select Microsoft AD CS Cryptographic Provider"}),"\n",(0,n.jsx)(r.p,{children:"To integrate the Securosys HSM with Microsoft Active Directory Certificate Services the Primus KSP/CNG Provider must be specified. This is usually done during installation of the Certificate Authority and can be done either via Graphical User Interface (GUI) or the Command Line Interface (CLI)."}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.p,{children:["Please read through the ",(0,n.jsx)(r.a,{href:"/ms-pki-adcs/Installation/Prerequisites",children:"Prerequisites"})," and the ",(0,n.jsx)(r.a,{href:"/ms-pki-adcs/Installation/Provider-Setup",children:"Installing CNG Provider"})," sections as they are required for further steps."]})}),"\n",(0,n.jsxs)(o.A,{groupId:"device-setup",children:[(0,n.jsxs)(s.A,{value:"ui",label:"GUI",default:!0,children:[(0,n.jsxs)(r.p,{children:["When selecting the Provider on the ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.code,{children:"Cryptography for CA window"})}),", select the ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.code,{children:"RSA#Securosys Primus HSM Key Storage Provider"})})," along with the key type, key length and suitable hash algorithm. Please consider that some older devices and applications do only support key lengths up to 2048 bit."]}),(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsx)(r.p,{children:"When using an existing private key you will be required to specify your existing key before selecting the Key Storage Provider."})}),(0,n.jsxs)(r.p,{children:["Example of selecting the Securosys Primus Key Storage Provider:\n",(0,n.jsx)(r.img,{src:t(38017).A+"",width:"962",height:"707"})]})]}),(0,n.jsxs)(s.A,{value:"console",label:"CLI",default:!0,children:[(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Using new certificate and private key. Run the following command in PowerShell:"}),"\n"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sh",children:'Install-AdcsCertificationAuthority \u2013caType <CA-Type> -caCommonName "<CA-Name>" \u2013CryptoProviderName "<Key Storage Provider Name>" \u2013KeyLength <2048> \u2013HashAlgorithm <SHA256> [\u2026]\n'})}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sh",children:'Install-AdcsCertificationAuthority -CAType "StandaloneRootCa" -CryptoProviderName "RSA# Securosys Primus HSM Key Storage Provider" -KeyLength 4096 -HashAlgorithmName SHA256 -CACommonName myDemoCA -OverwriteExistingKey -Force\n'})}),(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Using existing private key. Run the following command in PowerShell:"}),"\n"]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sh",children:'Install-AdcsCertificationAuthority \u2013caType <CA-Type> \u2013CryptoProviderName "<Key Storage Provider Name>" -caCommonName "<CA-Name>" \u2013KeyContainerName <NAME_OF_KEY> \u2013hashAlgorithm SHA256 [\u2026]\n'})}),(0,n.jsx)(r.p,{children:"Example:"}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sh",children:'Install-AdcsCertificationAuthority -CAType "StandaloneRootCa" -CryptoProviderName "RSA# Securosys Primus HSM Key Storage Provider" -KeyContainerName myDemoCA -HashAlgorithmName SHA256 -CACommonName myDemoCA\n'})})]})]})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);