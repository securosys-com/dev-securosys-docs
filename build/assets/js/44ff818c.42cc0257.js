"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[85197],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(96540);const i={},a=r.createContext(i);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}},65537:(e,n,t)=>{t.d(n,{A:()=>v});var r=t(96540),i=t(34164),a=t(65627),s=t(56347),o=t(50372),l=t(30604),c=t(11861),d=t(78749);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const i=(0,s.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=h(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[c,u]=f({queryString:t,groupId:i}),[p,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,d.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),y=(()=>{const e=c??p;return g({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{y&&l(y)}),[y]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),m(e)}),[u,m,a]),tabValues:a}}var m=t(9136);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function x(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),i=o[t].value;i!==r&&(c(n),s(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...a,className:(0,i.A)("tabs__item",y.tabItem,a?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function S(e){const n=p(e);return(0,b.jsxs)("div",{className:(0,i.A)("tabs-container",y.tabList),children:[(0,b.jsx)(x,{...n,...e}),(0,b.jsx)(j,{...n,...e})]})}function v(e){const n=(0,m.A)();return(0,b.jsx)(S,{...e,children:u(e.children)},String(n))}},79329:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var r=t(34164);const i={tabItem:"tabItem_Ymn6"};var a=t(74848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,s),hidden:t,children:n})}},89239:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Tutorials/SelfSignedCert","title":"Generate a Self-Signed Certificate for Docker","description":"Learn how to generate a self-signed certificate for Docker image signing using Securosys. Follow detailed steps, set parameters, and configure your truststore securely.","source":"@site/docker_signing/Tutorials/SelfSignedCert.md","sourceDirName":"Tutorials","slug":"/Tutorials/SelfSignedCert","permalink":"/docker_signing/Tutorials/SelfSignedCert","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Generate a Self-Signed Certificate for Docker","sidebar_label":"Self-Signed Certificate","description":"Learn how to generate a self-signed certificate for Docker image signing using Securosys. Follow detailed steps, set parameters, and configure your truststore securely."},"sidebar":"tutorialSidebar","previous":{"title":"Generate Certificate","permalink":"/docker_signing/Tutorials/GeneratingCertificates"},"next":{"title":"Generate CSR \ud83d\udd10","permalink":"/docker_signing/Tutorials/SigningCsr"}}');var i=t(74848),a=t(28453);t(65537),t(79329);const s={sidebar_position:3,title:"Generate a Self-Signed Certificate for Docker",sidebar_label:"Self-Signed Certificate",description:"Learn how to generate a self-signed certificate for Docker image signing using Securosys. Follow detailed steps, set parameters, and configure your truststore securely."},o="Generating Self-Signed Certificate",l={},c=[{value:"Securosys Docker Signing Notation Plugin",id:"securosys-docker-signing-notation-plugin",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{title:"Important",type:"tip",children:(0,i.jsxs)(n.p,{children:["If you ",(0,i.jsx)(n.a,{href:"/docker_signing/Installation/Plugin-Installation/RecommendedOption",children:"installed the plugin automatically"}),", you have already created the first signing key, so you can skip this part of the tutorial. For a manual installation, please refer to ",(0,i.jsx)(n.a,{href:"/docker_signing/Installation/Plugin-Installation/AlternativeWays/Installation",children:"this section"})," or when you want to create another signing key."]})}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"generating-self-signed-certificate",children:"Generating Self-Signed Certificate"})}),"\n",(0,i.jsx)(n.h3,{id:"securosys-docker-signing-notation-plugin",children:"Securosys Docker Signing Notation Plugin"}),"\n",(0,i.jsx)(n.p,{children:"To generate a self-signed certificate, execute the command below. The command will automatically create a self-signed certificate and download the certificate from the HSM via REST API/ TSB and add it to the Notation truststore in the Notation configuration directory."}),"\n",(0,i.jsxs)(n.p,{children:["The below command assumes that the plugin's ",(0,i.jsx)(n.code,{children:"config.json"})," is stored in the ",(0,i.jsx)(n.code,{children:"{BINARY_PATH}"}),", or that ",(0,i.jsx)(n.code,{children:"$CONFIG_PATH"})," environment variable is set as well as that the command is run from directory where the ",(0,i.jsx)(n.code,{children:"notation-securosys"})," binary is saved."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"./notation-securosys generate-selfsign-crt\n"})}),"\n",(0,i.jsxs)(n.p,{children:['After running the command, provide the appropriate parameters in JSON format (example shown below).\nGo to section "generate-selfsign-crt" in the ',(0,i.jsx)(n.code,{children:"input_example.json"})," file and prepare the parameters, accordingly to ",(0,i.jsx)(n.a,{href:"./CreateSigningKey#prepare-docker-image-signing-key-parameters",children:"this section"})," (use any editor you are familiar with):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'{ \n\n  "keyId": "keyLabel", \n\n  "pluginConfig": { \n\n    "password": "optional" \n\n  }, \n\n  "certificate": { \n\n    "validity": 365, \n\n    "attributes": { \n\n      "commonName": "Securosys_CN"\n\n    } \n\n  } \n\n} \n'})}),"\n",(0,i.jsx)(n.p,{children:"Command parameter and description:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Variable parameters"}),(0,i.jsx)(n.th,{children:"Command and parameter description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CONFIG_PATH=$PLUGIN_CONFIG_PATH/config.json "})}),(0,i.jsxs)(n.td,{children:["The path to the Securosys Docker Signing Notation Plugin configuration file. To be added in front of the command only if the config file is not stored in the ",(0,i.jsx)(n.code,{children:"{BINARY_PATH}"})," or the environment variable is not set as described in ",(0,i.jsx)(n.a,{href:"/docker_signing/Installation/Plugin-Installation/AlternativeWays/PluginConfiguration#create-securosys-plugin-configuration-environment-variable-and-directory-optional",children:"chapter"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"keyId": "pluginKeyId"'})}),(0,i.jsx)(n.td,{children:"Specify the key identifier (key name) associated with your signing key name."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'["password":"optional"]'})}),(0,i.jsx)(n.td,{children:"Optionally the password for the signing key. Omit the parameter completely if the key has no password."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:'"certificate" {...}'})}),(0,i.jsxs)(n.td,{children:["Specify your certificate parameters. These parameters are used for self-signed certificate. Set ",(0,i.jsx)(n.code,{children:"commonName"})," and ",(0,i.jsx)(n.code,{children:"validity"})," of certificate, by default set to 365 days."]})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Example command generating a self-signed certificate based on a singing key without password:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"./notation-securosys generate-selfsign-crt\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'{ \n\n "keyId": "SecurosysImageSignKey01", \n\n  "pluginConfig": {}, \n\n  "certificate": { \n\n    "validity": 365, \n\n    "attributes": { \n\n      "commonName": "DockerImageSign05"\n\n    } \n\n  } \n\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Output upon successful certificate generation:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'{\n    "label":"SecurosysImageSignKey01",\n    "certificate":\n    "-----BEGIN CERTIFICATE-----\n        MIIEazCCA1OgAwIBAgIGAYwWAbffMA0GCSqGSIb3DQEBCwUAMIHhMR8wHQYDVQQDDBZTZWN1cm9zeXNEb2NrZXJTaWduaW5nMQswCQYDVQQLDAJJVDEVMBMGA1UECgwMU2VjdXJvc3lzIFNB\u2026=\n    -----END CERTIFICATE-----"\n}\n'})}),"\n",(0,i.jsxs)(n.admonition,{title:"Note",type:"tip",children:[(0,i.jsxs)(n.p,{children:["The self-signed certificate is signed by the signing key ",(0,i.jsx)(n.code,{children:"keyId"})," itself, resulting in the certificate sharing the identical name with the signing key."]}),(0,i.jsxs)(n.p,{children:["If you wish to sign the signing key with an own root/CA-key, follow the procedure using a certificate signing request (CSR) in the next ",(0,i.jsx)(n.a,{href:"./SigningCsr",children:"chapter"}),"."]})]}),"\n",(0,i.jsx)(n.p,{children:"All created certificates are stored to the truststore of Notation in directory:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"{NOTATION_CONFIG}/truststore/x509/ca/securosysTrustStore\n"})}),"\n",(0,i.jsx)(n.p,{children:"Verify the creation and find all existing certificates by listing the directory content. Notation does not provide any specific command to list the certificates."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"ls -al {NOTATION_CONFIG}/truststore/x509/ca/securosysTrustStore\n"})}),"\n",(0,i.jsxs)(n.p,{children:["After successfully creating the certificate, it is now possible to proceed to ",(0,i.jsx)(n.a,{href:"./SignImage",children:"signing Docker images"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);