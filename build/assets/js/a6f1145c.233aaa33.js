"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[76034],{13211:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Tutorials/cryptographic_operations","title":"Cryptographic Operations - Secrets Engine plugin for HashiCorp Vault","description":"Cryptographic Operations for Securosy\' Secrets Engine plugin for HashiCorp Vault","source":"@site/hc_sse/Tutorials/cryptographic_operations.md","sourceDirName":"Tutorials","slug":"/Tutorials/cryptographic_operations","permalink":"/hc_sse/Tutorials/cryptographic_operations","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Cryptographic Operations - Secrets Engine plugin for HashiCorp Vault","sidebar_label":"Cryptographic Operations","description":"Cryptographic Operations for Securosy\' Secrets Engine plugin for HashiCorp Vault","keywords":["hsm","cloud hsm"]},"sidebar":"tutorialSidebar","previous":{"title":"Manage Keys","permalink":"/hc_sse/Tutorials/manage_keys"},"next":{"title":"Requests","permalink":"/hc_sse/Tutorials/requests"}}');var t=r(74848),o=r(28453);const s={sidebar_position:2,title:"Cryptographic Operations - Secrets Engine plugin for HashiCorp Vault",sidebar_label:"Cryptographic Operations",description:"Cryptographic Operations for Securosy' Secrets Engine plugin for HashiCorp Vault",keywords:["hsm","cloud hsm"]},i="Cryptographic Operations",d={},l=[{value:"Encrypt",id:"encrypt",level:2},{value:"Decrypt",id:"decrypt",level:2},{value:"Sign",id:"sign",level:2},{value:"Verify",id:"verify",level:2},{value:"Wrap",id:"wrap",level:2},{value:"Unwrap",id:"unwrap",level:2}];function c(e){const a={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"cryptographic-operations",children:"Cryptographic Operations"})}),"\n",(0,t.jsx)(a.p,{children:"Below are the cryptographic operations that can be performed using keys on your Hardware Security Module (HSM)."}),"\n",(0,t.jsx)(a.h2,{id:"encrypt",children:"Encrypt"}),"\n",(0,t.jsx)(a.p,{children:"Encrypt a payload"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"$ vault write securosys-hsm/operation/encrypt/{key-name} \npayload={base64-encoded-string}\npassword={password-of-the-key}\ncipherAlgorithm={cipher-algorithm}\ntagLength={tag-length}\nadditionalAuthenticationData={additional-authentication-data}\n"})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"curl --location --request PUT '<server_addr>/v1/securosys-hsm/operation/encrypt/{key-name}' \\\n--header 'X-Vault-Token: <vault_access_token>'\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'payload={base64-encoded-string}' \\\n--data-urlencode 'password={password-for-a-key}' \\\n--data-urlencode 'cipherAlgorithm={cipher-algorithm}' \\\n--data-urlencode 'tagLength={tag-length}' \\\n--data-urlencode 'additionalAuthenticationData={additional-authentication-data}'\n"})}),"\n",(0,t.jsx)(a.h2,{id:"decrypt",children:"Decrypt"}),"\n",(0,t.jsx)(a.p,{children:"Decrypt an encrypted payload."}),"\n",(0,t.jsx)(a.p,{children:"In case the referenced key has a policy attached, then a request-id is returned indicating the required approvals to collect."}),"\n",(0,t.jsxs)(a.p,{children:["More information in ",(0,t.jsx)(a.a,{href:"/hc_sse/Tutorials/requests",children:"this section"}),"."]}),"\n",(0,t.jsx)(a.admonition,{title:"Tip",type:"tip",children:(0,t.jsxs)(a.p,{children:["The ",(0,t.jsx)(a.strong,{children:"keyVersion"})," has to be provided in this request, either by adding it in the url (e.g. ",(0,t.jsx)(a.code,{children:"securosys-hsm/operation/decrypt/{key-name}/{key-version}"}),"), or by passing it as parameter (e.g.",(0,t.jsx)(a.code,{children:"keyVersion={key-version}"}),")."]})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"    $ vault write securosys-hsm/operation/decrypt/{key-name} \n    password={password-for-a-key}\n    keyVersion={key-version}\n    encryptedPayload={base64-encoded-string}\n    cipherAlgorithm={cipher-algorithm}\n    initializationVector={initialization-vector}\n    tagLength={tag-length}\n    additionalAuthenticationData={additional-authentication-data}\n"})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"curl --location --request PUT '<server_addr>/v1/securosys-hsm/operation/decrypt/{key-name}' \\\n--header 'X-Vault-Token: <vault_access_token>'\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'encryptedPayload={base64-encoded-string}' \\\n--data-urlencode 'keyVersion={key-version}' \\\n--data-urlencode 'cipherAlgorithm={cipher-algorithm}' \\\n--data-urlencode 'password={password-for-a-key}' \\\n--data-urlencode 'tagLength={tag-length}' \\\n--data-urlencode 'initializationVector={initialization-vector}' \\\n--data-urlencode 'additionalAuthenticationData={additional-authentication-data}'\n"})}),"\n",(0,t.jsx)(a.h2,{id:"sign",children:"Sign"}),"\n",(0,t.jsx)(a.p,{children:"Sign a payload"}),"\n",(0,t.jsx)(a.p,{children:"In case the referenced key has a policy attached, then a request-id is returned, indicating the required approvals to be collected."}),"\n",(0,t.jsxs)(a.p,{children:["More information in ",(0,t.jsx)(a.a,{href:"/hc_sse/Tutorials/requests",children:"this section"}),"."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"$ vault write securosys-hsm/operation/sign/{key-name}\npassword={password-for-the-key}\nsignatureAlgorithm={algorithm}\npayload={payload-base64}\npayloadType={payload-type}\nmetaData={meta-data-base64}\nmetaDataSignature={meta-data-signature}\n"})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"curl --location --request PUT '<server_addr>/v1/securosys-hsm/operation/sign/{key-name}' \\\n--header 'X-Vault-Token: <vault_access_token>'\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'signatureAlgorithm={algorithm}' \\\n--data-urlencode 'payload={payload-base64}' \\\n--data-urlencode 'payloadType={payload-type}' \\\n--data-urlencode 'password={password-for-a-key}' \\\n--data-urlencode 'metaData={meta-data-base64}' \\\n--data-urlencode 'metaDataSignature={meta-data-signature}'\n"})}),"\n",(0,t.jsx)(a.h2,{id:"verify",children:"Verify"}),"\n",(0,t.jsx)(a.p,{children:"Verify the signature of a signed payload"}),"\n",(0,t.jsx)(a.admonition,{title:"Tip",type:"tip",children:(0,t.jsxs)(a.p,{children:["The ",(0,t.jsx)(a.strong,{children:"keyVersion"})," has to be provided in this request, either by adding it in the url (e.g. ",(0,t.jsx)(a.code,{children:"securosys-hsm/operation/verify/{key-name}/{key-version}"}),"), or by passing it as parameter (e.g.",(0,t.jsx)(a.code,{children:"keyVersion={key-version}"}),")."]})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"$ vault write securosys-hsm/operation/verify/{key-name}\npassword={password-for-the-key}\nsignatureAlgorithm={algorithm}\npayload={payload-base64}\nsignature={signature}\n"})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"curl --location --request PUT '<server_addr>/v1/securosys-hsm/operation/verify/{key-name}' \\\n--header 'X-Vault-Token: <vault_access_token>'\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'signatureAlgorithm={algorithm}' \\\n--data-urlencode 'payload={payload-base64}' \\\n--data-urlencode 'password={password-for-a-key}' \\\n--data-urlencode 'signature={meta-data-signature}'\n"})}),"\n",(0,t.jsx)(a.h2,{id:"wrap",children:"Wrap"}),"\n",(0,t.jsx)(a.p,{children:"Wrap a key with another (wrapper) key"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"$ vault write securosys-hsm/operation/wrap/{key-to-be-wrapped}/{wrap-key-name}\nkeyToBeWrappedPassword={password-for-first-key}\nwrapKeyPassword={password-for-second-key}\nwrapMethod={wrap-method}\n"})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"curl --location --request PUT '<server_addr>/v1/securosys-hsm/operation/wrap/{key-to-be-wrapped}/{wrap-key-name}' \\\n--header 'X-Vault-Token: <vault_access_token>'\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'keyToBeWrappedPassword={password-for-first-key}' \\\n--data-urlencode 'wrapKeyPassword={password-for-second-key}' \\\n--data-urlencode 'wrapMethod={wrap-method}'\n"})}),"\n",(0,t.jsx)(a.h2,{id:"unwrap",children:"Unwrap"}),"\n",(0,t.jsx)(a.p,{children:"Unwrap a key using a wrapper key\nIn case the referenced key has a policy attached, then a request-id is returned, indicating the required approvals to collect."}),"\n",(0,t.jsxs)(a.p,{children:["More information in ",(0,t.jsx)(a.a,{href:"/hc_sse/Tutorials/requests",children:"this section"}),"."]}),"\n",(0,t.jsxs)(a.blockquote,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Note:"})," The ",(0,t.jsx)(a.strong,{children:"keyVersion"})," has to be provided in this request, either by adding it in the url (e.g. ",(0,t.jsx)(a.code,{children:"securosys-hsm/operation/unwrap/{new-unwrapped-key-name}/{wrap-key-name}/{key-version}"}),"), or by passing it as parameter (e.g.",(0,t.jsx)(a.code,{children:"keyVersion={key-version}"}),")."]}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"$ vault write securosys-hsm/operation/unwrap/{new-unwrapped-key-name}/{wrap-key-name}\nkeyLabel={key-label-for-new-key}\nkeyVersion={key-version}\nwrappedKey={wrapped-key-base64-encoded}\npassword={password-for-wrap-key}\nwrapMethod={wrap-method}\nsimplePolicy={policy} or policy={full-policy} or policy=@policy-file.json\nattributes={attributes}\n"})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-shell",children:"curl --location --request PUT '<server_addr>/v1/securosys-hsm/operation/unwrap/{new-unwrapped-key-name}/{wrap-key-name}' \\\n--header 'X-Vault-Token: <vault_access_token>'\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'keyLabel={key-label-for-new-key}' \\\n--data-urlencode 'keyVersion={key-version}' \\\n--data-urlencode 'wrappedKey={wrapped-key-base64-encoded}' \\\n--data-urlencode 'wrapMethod={wrap-method}' \\\n--data-urlencode 'simplePolicy={policy}' or --data-urlencode 'policy={full-policy}' \\\n--data-urlencode 'password={password-for-wrap-key}'\n--data-urlencode 'attributes={attributes}' \\\n"})})]})}function p(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,a,r)=>{r.d(a,{R:()=>s,x:()=>i});var n=r(96540);const t={},o=n.createContext(t);function s(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(o.Provider,{value:a},e.children)}}}]);