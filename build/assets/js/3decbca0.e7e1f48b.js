"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[22376],{26028:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"osslv3/quickstart","title":"Quickstart PKCS#11 Provider API OpenSSL 3.x","description":"Discover OpenSSL\'s PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.","source":"@site/openssl/osslv3/quickstart.md","sourceDirName":"osslv3","slug":"/osslv3/quickstart","permalink":"/openssl/osslv3/quickstart","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"OpenSSL","permalink":"/openssl/tags/open-ssl"},{"inline":true,"label":"PKCS#11","permalink":"/openssl/tags/pkcs-11"}],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Quickstart PKCS#11 Provider API OpenSSL 3.x","sidebar_label":"Quickstart","description":"Discover OpenSSL\'s PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.","keywords":["OpenSSL PKCS11 provider","OpenSSL PKCS11 API","OpenSSL command line utility (CLI)","OpenSSL CLI commands","OpenSSL installation guide","OpenSSL installation troubleshooting","OpenSSL troubleshooting tips","OpenSSL certificate management","OpenSSL certificate creation","OpenSSL certificate renewal","OpenSSL configuration file","OpenSSL configuration options","OpenSSL configuration guide","OpenSSL encryption algorithms","OpenSSL decryption methods","OpenSSL digital signatures","OpenSSL SSL/TLS protocols","OpenSSL SSL/TLS configuration","OpenSSL heartbleed vulnerability","OpenSSL security updates"],"tags":["OpenSSL","PKCS#11"]},"sidebar":"openssl","previous":{"title":"Introduction","permalink":"/openssl/osslv3/overview"},"next":{"title":"Use Cases","permalink":"/openssl/category/use-cases"}}');var i=s(74848),o=s(28453);const r={sidebar_position:1,title:"Quickstart PKCS#11 Provider API OpenSSL 3.x",sidebar_label:"Quickstart",description:"Discover OpenSSL's PKCS11 provider, CLI commands, installation tips, and troubleshooting. Integrate seamlessly with HSM for enhanced security.",keywords:["OpenSSL PKCS11 provider","OpenSSL PKCS11 API","OpenSSL command line utility (CLI)","OpenSSL CLI commands","OpenSSL installation guide","OpenSSL installation troubleshooting","OpenSSL troubleshooting tips","OpenSSL certificate management","OpenSSL certificate creation","OpenSSL certificate renewal","OpenSSL configuration file","OpenSSL configuration options","OpenSSL configuration guide","OpenSSL encryption algorithms","OpenSSL decryption methods","OpenSSL digital signatures","OpenSSL SSL/TLS protocols","OpenSSL SSL/TLS configuration","OpenSSL heartbleed vulnerability","OpenSSL security updates"],tags:["OpenSSL","PKCS#11"]},l="Getting started with OpenSSL v3.x",a={},c=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"getting-started-with-openssl-v3x",children:"Getting started with OpenSSL v3.x"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["For the OpenSSL integration to work, the ",(0,i.jsx)("a",{href:"/pkcs/overview",target:"_blank",rel:"noopener noreferrer",children:"Securosys Primus PKCS#11 Provider API"})," needs to be installed and configured properly.\nVerify proper installation with successful execution of the ",(0,i.jsx)(n.code,{children:"ppin -t"})," command."]})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Download the Securosys OpenSSL pkcs11-provider bundle and extract its content to ",(0,i.jsx)(n.code,{children:"/tmp/securosys"}),".\nFollow the ",(0,i.jsx)("a",{href:"/openssl/osslv3/downloads",target:"_blank",rel:"noopener noreferrer",children:"download instructions"})," to obtain the credentials."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:"{2}",children:'P11_PROV_VERSION=latest\nCRED=<robot.reader.openssl:PASSWORD>   \n\ncurl -L -XGET "https://${CRED}@securosys.jfrog.io/artifactory/opensslv3-pkcs11/${P11_PROV_VERSION}/Securosys_PrimusAPI_OSSLv3-Provider-PKCS11-${P11_PROV_VERSION}.zip" -o Securosys_PrimusAPI_OSSLv3-Provider-PKCS11-${P11_PROV_VERSION}.zip\nunzip Securosys_PrimusAPI_OSSLv3-Provider-PKCS11-${P11_PROV_VERSION}.zip -d /tmp/securosys\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Extract the library files to ",(0,i.jsx)(n.code,{children:"/usr/local/lib/ossl-modules/"}),", and change the owner and set the permissions."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"unzip /tmp/securosys/securosys_primusapi_osslv3-provider-pkcs11-executable-${P11_PROV_VERSION}.zip -d /tmp/securosys/\nsudo mkdir -p /usr/local/lib/ossl-modules\nsudo unzip -j /tmp/securosys/PrimusAPI_OSSLv3-Provider-PKCS11-${P11_PROV_VERSION}-rhel8_amd64.zip -d /usr/local/lib/ossl-modules/\n\nsudo chown root:primus /usr/local/lib/ossl-modules/pkcs11.{so,la}\nsudo chmod 444 /usr/local/lib/ossl-modules/pkcs11.{so,la}\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:'When using the version label "latest", the final unzip command will fail if the files in the first archive include a different version tag.\nReplace "-rhel8_amd64.zip" with your platform and architecture specific archive.'}),(0,i.jsxs)(n.p,{children:["Avoid using the packages, as they will install to ",(0,i.jsx)(n.code,{children:"/usr/lib/osslmodules"}),' and may be replaced by an incompatible "latchset" update!']})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Adapt the OpenSSL configuration to enable the OpenSSL pkcs11-provider, see ",(0,i.jsx)("a",{href:"/openssl/osslv3/Installation/configuration",target:"_blank",rel:"noopener noreferrer",children:"Configuration"}),"."]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:" Click to see a configuration example"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:"{19-35}",children:"HOME            = .\n\n# Use this in order to automatically load providers.\nopenssl_conf = openssl_init\n\n# Comment out the next line to ignore configuration errors\nconfig_diagnostics = 1\n\noid_section = new_oids\n\n[ new_oids ]\n\n[openssl_init]\nproviders = provider_sect\n\n[random_sect]\nrandom = PKCS11-RAND\n\n[provider_sect]\ndefault = default_sect\nbase = base_sect\npkcs11 = pkcs11_section\n\n[base_sect]\nactivate = 1\n\n[default_sect]\nactivate = 1\n\n[pkcs11_section]\nmodule = /opt/openssl-3.3.2/lib/ossl-modules/pkcs11.so\npkcs11-module-path = /usr/local/primus/lib/libprimusP11.so\npkcs11-module-load-behavior = early\npkcs11-module-quirks = no-deinit no-operation-state\nactivate = 1\n\n####################################################################\n[ ca ]\ndefault_ca    = CA_default        # The default ca section\n\n...   \n"})})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Test that the provider is enabled:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openssl list -providers\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:"{10-13} ",children:"Providers:\n  base\n    name: OpenSSL Base Provider\n    version: 3.3.1\n    status: active\n  default\n    name: OpenSSL Default Provider\n    version: 3.3.1\n    status: active\n  pkcs11\n    name: PKCS#11 Provider\n    version: 3.1.4\n    status: active\n"})}),"\n",(0,i.jsx)(n.p,{children:'And offers "@ pkcs11" algorithms:'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openssl list -signature-algorithms\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:"{11-14}",children:"{ 1.2.840.113549.1.1.1, 2.5.8.1.1, RSA, rsaEncryption } @ default\n{ 1.2.840.10040.4.1, 1.2.840.10040.4.3, 1.3.14.3.2.12, 1.3.14.3.2.13, 1.3.14.3.2.27, DSA, DSA-old, DSA-SHA, DSA-SHA1, DSA-SHA1-old, dsaEncryption, dsaEncryption-old, dsaWithSHA, dsaWithSHA1, dsaWithSHA1-old } @ default\n{ 1.3.101.112, ED25519 } @ default\n{ 1.3.101.113, ED448 } @ default\n{ 1.2.156.10197.1.301, SM2 } @ default\nECDSA @ default\nHMAC @ default\nSIPHASH @ default\nPOLY1305 @ default\nCMAC @ default\n{ 1.2.840.113549.1.1.1, 2.5.8.1.1, RSA, rsaEncryption } @ pkcs11\n{ 1.3.101.112, ED25519 } @ pkcs11\n{ 1.3.101.113, ED448 } @ pkcs11\nECDSA @ pkcs11\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can use the OpenSSL ",(0,i.jsx)(n.code,{children:"storeutl"})," command to list the objects stored on your token (HSM):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'openssl storeutl "pkcs11:token=<YOUR_USER_NAME>;pin-value=<YOUR_PKCS11_PIN>"\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Further content"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/openssl/osslv3/Installation/prerequisites",children:"Prerequisites"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/openssl/osslv3/Installation/",children:"Complete installation guide"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/openssl/osslv3/Tutorial/openssl_cli",children:"Generate a key with OpenSSL"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(96540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);