"use strict";(self.webpackChunksecurosys_docs=self.webpackChunksecurosys_docs||[]).push([[51202],{1985:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Tutorials/Migrating-MPKI-to-HSM/Import-PrivKey-toHSM","title":"Importing a Microsoft AD CS key to the HSM","description":"Importing a Microsoft AD CS key to Securosys Hardware Security Modules (HSMs)","source":"@site/ms-pki-adcs/Tutorials/Migrating-MPKI-to-HSM/Import-PrivKey-toHSM.md","sourceDirName":"Tutorials/Migrating-MPKI-to-HSM","slug":"/Tutorials/Migrating-MPKI-to-HSM/Import-PrivKey-toHSM","permalink":"/ms-pki-adcs/Tutorials/Migrating-MPKI-to-HSM/Import-PrivKey-toHSM","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1741162132000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Importing a Microsoft AD CS key to the HSM","sidebar_label":"Import a private key","description":"Importing a Microsoft AD CS key to Securosys Hardware Security Modules (HSMs)","keywords":["hsm","cloud hsm"]},"sidebar":"tutorialSidebar","previous":{"title":"Delete Key/Certificate","permalink":"/ms-pki-adcs/Tutorials/Migrating-MPKI-to-HSM/Delete-Key&Cert"},"next":{"title":"Reconfigure registry","permalink":"/ms-pki-adcs/Tutorials/Migrating-MPKI-to-HSM/Reconfigure-ADCS-Registry"}}');var n=t(74848),o=t(28453);const i={sidebar_position:3,title:"Importing a Microsoft AD CS key to the HSM",sidebar_label:"Import a private key",description:"Importing a Microsoft AD CS key to Securosys Hardware Security Modules (HSMs)",keywords:["hsm","cloud hsm"]},a="Importing a Private Key to HSM",c={},l=[];function d(e){const r={admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"importing-a-private-key-to-hsm",children:"Importing a Private Key to HSM"})}),"\n",(0,n.jsx)(r.p,{children:"To import the private key (from AD CS backup) into the Securosys HSM, perform the following steps:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Open a Command Shell with administrator rights"}),"\n",(0,n.jsxs)(r.li,{children:["Import the private key by using ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.code,{children:"certutil.exe"})}),"."]}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.p,{children:["You will be asked for the passphrase to decrypt the PKCS#12 file (set during the backup procedure). Consult the command ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.code,{children:"help certutil -importpfx -?"})})," for further options and modifiers, e.g. if the private key may be exported or not."]})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'certutil -f -v [-p "<passphrase>"] -csp "Securosys Primus HSM Key Storage Provider" -importpfx <myBackupFolder>\\<myCAPrivateKeyBackup>.p12 [FriendlyName="<myCAName>",KeyFriendlyName="<myCAName>",NoExport|ExportEncrypted]\n'})}),"\n",(0,n.jsx)(r.p,{children:"Example:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'certutil -f -v -csp "Securosys Primus HSM Key Storage Provider" -importpfx myDemoCA\\myDemoCA.p12\n\n    CRYPT_IMPL_HARDWARE -- 1\n      (CRYPT_IMPL_SOFTWARE -- 2)\n      (CRYPT_IMPL_MIXED -- 3)\n      (CRYPT_IMPL_UNKNOWN -- 4)\n      (CRYPT_IMPL_REMOVABLE -- 8)\nEnter PFX password:\nCertificate "myDemoCA" added to store.\n\nCertUtil: -importPFX command completed successfully.\n'})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Re-export the resulting AD CS certificate and private key to a ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.code,{children:".pfx"})})," file:"]}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'certutil -exportpfx my myDemoCA myDemoCAPrimus.p12\n\nmy "Personal"\n================ Certificate 43 ================\nSerial Number: 3aa837d2cf1289b241b9ee87a5474b4f\nIssuer: CN=myDemoCA\n NotBefore: 10.08.2021 14:14\n NotAfter: 10.08.2026 14:22\nSubject: CN=myDemoCA\nCA Version: V0.0\nSignature matches Public Key\nRoot Certificate: Subject matches Issuer\nCert Hash(sha1): 19f647a3f4e60eabc126d73ef1ef6e9f84224997\n  Key Container = myDemoCA-5727d8fe-7fce-4c02-9af0-7d0b4de67a2f\n  Provider = Securosys Primus HSM Key Storage Provider\nPrivate key is NOT plain text exportable\nSignature test passed\nEnter new password for output file myDemoCAPrimus.p12:\nEnter new password:\nConfirm new password:\nCertUtil: -exportPFX command completed successfully.\n'})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Remove the previously imported AD CS key:"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'certutil -delkey -csp "Securosys Primus HSM Key Storage Provider" myDemoCA-5727d8fe-7fce-4c02-9af0-7d0b4de67a2f\n\n  myDemoCA-5727d8fe-7fce-4c02-9af0-7d0b4de67a2f\nCertUtil: -delkey command completed successfully.\n'})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Restore the exported ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.code,{children:".pfx"})})," file on AD CS to restore it under the original private key name by running the following command:"]}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"certutil -restorekey myDemoCAPrimus.p12\n\nEnter PFX password:\nRestored keys and certificates for WIN-E99A37QE5JP\\myDemoCA from myDemoCAPrimus.p12.\nCertUtil: -restoreKey command completed successfully.\nThe CertSvc service may need to be restarted for changes to take effect.\n"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Link the existing CA certificate with the private key in the new key storage provider by using the Microsoft command line tool:"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:'certutil \u2013f -repairstore -csp "Securosys Primus HSM Key Storage Provider" my <OriginalKeyName>|<Cert Hash>|<Serialnumber>\n\ncertutil -f -repairstore -csp "Securosys Primus HSM Key Storage Provider" my myDemoCA\n\nmy "Personal"\n================ Certificate 43 ================\nSerial Number: 3aa837d2cf1289b241b9ee87a5474b4f\nIssuer: CN=myDemoCA\n NotBefore: 10.08.2021 14:14\n NotAfter: 10.08.2026 14:22\nSubject: CN=myDemoCA\nCA Version: V0.0\nSignature matches Public Key\nRoot Certificate: Subject matches Issuer\nCert Hash(sha1): 19f647a3f4e60eabc126d73ef1ef6e9f84224997\n  Key Container = myDemoCA\n  Provider = Securosys Primus HSM Key Storage Provider\nSecurosys Primus HSM Key Storage Provider: KeySpec=0\nAES256+RSAES_OAEP(RSA:CNG) test skipped\nSignature test passed\nCertUtil: -repairstore command completed successfully.\n'})})]})}function m(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>a});var s=t(96540);const n={},o=s.createContext(n);function i(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);