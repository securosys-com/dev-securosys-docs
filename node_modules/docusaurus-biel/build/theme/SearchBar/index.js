"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
// @ts-ignore
var useGlobalData_1 = require("@docusaurus/useGlobalData");
var conf_1 = require("../../conf");
var utils_1 = require("../../utils");
function SearchBar() {
    var _a;
    // Retrieve plugin options
    var pluginData = (0, useGlobalData_1.usePluginData)('docusaurus-biel-plugin') || {};
    var _b = __assign(__assign({}, conf_1.DEFAULT_OPTIONS), pluginData), _c = _b.search, search = _c === void 0 ? {} : _c, customFont = _b.customFont, headerTitle = _b.headerTitle, hideExpandButton = _b.hideExpandButton, project = _b.project, errorMessage404 = _b.errorMessage404, errorMessage403 = _b.errorMessage403, errorMessageDefault = _b.errorMessageDefault, footerText = _b.footerText;
    var searchProps = __assign(__assign(__assign({}, conf_1.DEFAULT_OPTIONS.search), search), { customFont: customFont, headerTitle: headerTitle, hideExpandButton: hideExpandButton, project: project, errorMessage404: errorMessage404, errorMessage403: errorMessage403, errorMessageDefault: errorMessageDefault, footerText: footerText });
    var buttonText = search.searchButtonText || ((_a = conf_1.DEFAULT_OPTIONS.search) === null || _a === void 0 ? void 0 : _a.searchButtonText);
    var domAttributes = Object.entries(searchProps)
        .filter(function (_a) {
        var key = _a[0], value = _a[1];
        return key !== 'enable' && key !== 'searchButtonText' && value !== undefined;
    })
        .reduce(function (acc, _a) {
        var key = _a[0], value = _a[1];
        acc[(0, utils_1.camelToKebab)(key)] = value;
        return acc;
    }, {});
    // @ts-ignore
    return react_1.default.createElement("biel-search-button", __assign({}, domAttributes), buttonText);
}
exports.default = SearchBar;
//# sourceMappingURL=index.js.map